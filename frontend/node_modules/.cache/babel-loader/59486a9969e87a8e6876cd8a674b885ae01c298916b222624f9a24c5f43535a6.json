{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/Analytics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Analytics.css';\nimport ExpensesByCategoryChart from './ExpensesByCategoryChart';\nimport ExpensesByMonthChart from './ExpensesByMonthChart';\nimport { useUser } from '../../context/UserContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const {\n    email\n  } = useUser(); // Get email from context\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(''); // Store selected month\n  const [selectedYear, setSelectedYear] = useState(''); // Store selected year\n\n  // Fetch data when email is available\n  useEffect(() => {\n    if (email) {\n      // Fetch expenses\n      fetch(`/api/expenses/${email}`).then(response => response.json()).then(data => setExpenses(data)).catch(error => console.error('Error fetching expenses:', error));\n\n      // Fetch incomes\n      fetch(`/api/incomes/${email}`).then(response => response.json()).then(data => setIncomes(data)).catch(error => console.error('Error fetching incomes:', error));\n    }\n  }, [email]);\n\n  // Calculate total expenses and incomes\n  const totalExpenses = expenses.reduce((acc, expense) => acc + expense.Amount, 0);\n  const totalIncomes = incomes.reduce((acc, income) => acc + income.Amount, 0);\n\n  // Calculate savings or deficit (minus if expenses > incomes)\n  const savings = totalIncomes - totalExpenses;\n\n  // Display saving or deficit as a label\n  const savingsLabel = savings >= 0 ? `Saving: ${savings.toFixed(2)}₪` : `Deficit: ${Math.abs(savings).toFixed(2)}₪`;\n\n  // Filter expenses based on selected month and year\n  const filteredExpenses = expenses.filter(expense => {\n    const expenseDate = new Date(expense.Date);\n    const expenseMonth = expenseDate.toLocaleString('en-US', {\n      month: 'long'\n    });\n    const expenseYear = expenseDate.getFullYear().toString();\n    const isMonthMatch = selectedMonth ? expenseMonth === selectedMonth : true;\n    const isYearMatch = selectedYear ? expenseYear === selectedYear : true;\n    return isMonthMatch && isYearMatch;\n  });\n\n  // Extract unique months and years from expenses\n  const uniqueMonths = Array.from(new Set(expenses.map(expense => new Date(expense.Date).toLocaleString('en-US', {\n    month: 'long'\n  }))));\n  const uniqueYears = Array.from(new Set(expenses.map(expense => new Date(expense.Date).getFullYear().toString())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), email && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Expense and Income Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Expenses: \", totalExpenses.toFixed(2), \"\\u20AA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Incomes: \", totalIncomes.toFixed(2), \"\\u20AA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: savingsLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"month\",\n            children: \"Select Month:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"month\",\n            value: selectedMonth,\n            onChange: e => setSelectedMonth(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), uniqueMonths.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: month,\n              children: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"year\",\n            children: \"Select Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"year\",\n            value: selectedYear,\n            onChange: e => setSelectedYear(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), uniqueYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: /*#__PURE__*/_jsxDEV(ExpensesByCategoryChart, {\n            expensesByCategory: filteredExpenses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: /*#__PURE__*/_jsxDEV(ExpensesByMonthChart, {\n            monthlyExpenses: filteredExpenses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"JGLTZ7Ph2MpoiU9tIffdyM+qIHU=\", false, function () {\n  return [useUser];\n});\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useState","ExpensesByCategoryChart","ExpensesByMonthChart","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","Analytics","_s","email","expenses","setExpenses","incomes","setIncomes","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","fetch","then","response","json","data","catch","error","console","totalExpenses","reduce","acc","expense","Amount","totalIncomes","income","savings","savingsLabel","toFixed","Math","abs","filteredExpenses","filter","expenseDate","Date","expenseMonth","toLocaleString","month","expenseYear","getFullYear","toString","isMonthMatch","isYearMatch","uniqueMonths","Array","from","Set","map","uniqueYears","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","year","expensesByCategory","monthlyExpenses","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/Analytics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Analytics.css';\nimport ExpensesByCategoryChart from './ExpensesByCategoryChart';\nimport ExpensesByMonthChart from './ExpensesByMonthChart';\nimport { useUser } from '../../context/UserContext'; \n\ninterface Expense {\n  ExpenseID: number;\n  CategoryID: number;\n  CategoryName: string;\n  Amount: number;\n  Date: Date;\n  Description?: string;\n}\n\ninterface Income {\n  IncomeID: number;\n  Amount: number;\n  Date: Date;\n  Description?: string;\n}\n\nconst Analytics: React.FC = () => {\n  const { email } = useUser(); // Get email from context\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [incomes, setIncomes] = useState<Income[]>([]);\n  const [selectedMonth, setSelectedMonth] = useState<string>(''); // Store selected month\n  const [selectedYear, setSelectedYear] = useState<string>(''); // Store selected year\n\n  // Fetch data when email is available\n  useEffect(() => {\n    if (email) {\n      // Fetch expenses\n      fetch(`/api/expenses/${email}`)\n        .then(response => response.json())\n        .then((data: Expense[]) => setExpenses(data))\n        .catch(error => console.error('Error fetching expenses:', error));\n\n      // Fetch incomes\n      fetch(`/api/incomes/${email}`)\n        .then(response => response.json())\n        .then((data: Income[]) => setIncomes(data))\n        .catch(error => console.error('Error fetching incomes:', error));\n    }\n  }, [email]);\n\n  // Calculate total expenses and incomes\n  const totalExpenses = expenses.reduce((acc, expense) => acc + expense.Amount, 0);\n  const totalIncomes = incomes.reduce((acc, income) => acc + income.Amount, 0);\n\n  // Calculate savings or deficit (minus if expenses > incomes)\n  const savings = totalIncomes - totalExpenses;\n\n  // Display saving or deficit as a label\n  const savingsLabel = savings >= 0 ? `Saving: ${savings.toFixed(2)}₪` : `Deficit: ${Math.abs(savings).toFixed(2)}₪`;\n\n  // Filter expenses based on selected month and year\n  const filteredExpenses = expenses.filter((expense) => {\n    const expenseDate = new Date(expense.Date);\n    const expenseMonth = expenseDate.toLocaleString('en-US', { month: 'long' });\n    const expenseYear = expenseDate.getFullYear().toString();\n\n    const isMonthMatch = selectedMonth ? expenseMonth === selectedMonth : true;\n    const isYearMatch = selectedYear ? expenseYear === selectedYear : true;\n\n    return isMonthMatch && isYearMatch;\n  });\n\n  // Extract unique months and years from expenses\n  const uniqueMonths = Array.from(\n    new Set(\n      expenses.map((expense) =>\n        new Date(expense.Date).toLocaleString('en-US', { month: 'long' })\n      )\n    )\n  );\n\n  const uniqueYears = Array.from(\n    new Set(\n      expenses.map((expense) => new Date(expense.Date).getFullYear().toString())\n    )\n  );\n\n  return (\n    <div className=\"analytics-container\">\n      <h1>Analytics</h1>\n      {email && (\n        <>\n          {/* Display Expense and Income Summary */}\n          <div className=\"summary-container\">\n            <h2>Expense and Income Summary</h2>\n            <div className=\"summary-box\">\n              <p>Total Expenses: {totalExpenses.toFixed(2)}₪</p>\n              <p>Total Incomes: {totalIncomes.toFixed(2)}₪</p>\n              <p>{savingsLabel}</p> {/* Displaying either \"Saving\" or \"Deficit\" */}\n            </div>\n          </div>\n\n          {/* Month and Year selection */}\n          <div className=\"filter-container\">\n            <div className=\"month-selector\">\n              <label htmlFor=\"month\">Select Month:</label>\n              <select\n                id=\"month\"\n                value={selectedMonth}\n                onChange={(e) => setSelectedMonth(e.target.value)}\n              >\n                <option value=\"\">All Months</option>\n                {uniqueMonths.map((month) => (\n                  <option key={month} value={month}>\n                    {month}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"year-selector\">\n              <label htmlFor=\"year\">Select Year:</label>\n              <select\n                id=\"year\"\n                value={selectedYear}\n                onChange={(e) => setSelectedYear(e.target.value)}\n              >\n                <option value=\"\">All Years</option>\n                {uniqueYears.map((year) => (\n                  <option key={year} value={year}>\n                    {year}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Display Charts */}\n          <div className=\"charts-container\">\n            <div className=\"chart\">\n              <ExpensesByCategoryChart expensesByCategory={filteredExpenses} />\n            </div>\n            <div className=\"chart\">\n              <ExpensesByMonthChart monthlyExpenses={filteredExpenses} />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}