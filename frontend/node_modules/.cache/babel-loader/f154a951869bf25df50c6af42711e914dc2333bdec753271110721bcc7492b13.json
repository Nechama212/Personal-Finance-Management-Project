{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/UploadExcel/UploadExpenses.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadExpenses = ({\n  userEmail\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files ? e.target.files[0] : null;\n    setFile(file);\n    setError(null); // Reset error when a new file is selected\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError('Please select a file before uploading');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    setUploading(true); // Show uploading state\n    setSuccess(null);\n    setError(null);\n    try {\n      const response = await fetch(`/api/expenses/upload-expenses`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${userEmail}` // אם יש צורך לשלוח את ה-email כאן\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        setError('Error uploading file: ' + errorText);\n        return;\n      }\n      setSuccess('File uploaded successfully');\n    } catch (error) {\n      setError('Error uploading file: ' + error);\n    } finally {\n      setUploading(false); // Hide uploading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Expenses from Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls, .csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !file || uploading,\n      children: uploading ? 'Uploading...' : 'Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadExpenses, \"K+caEbSpxCUPf5fDaHUrOyVjYeo=\");\n_c = UploadExpenses;\nexport default UploadExpenses;\nvar _c;\n$RefreshReg$(_c, \"UploadExpenses\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadExpenses","userEmail","_s","file","setFile","uploading","setUploading","error","setError","success","setSuccess","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","headers","body","ok","errorText","text","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/UploadExcel/UploadExpenses.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface UploadExpensesProps {\n  userEmail: string;  \n}\n\nconst UploadExpenses: React.FC<UploadExpensesProps> = ({ userEmail }) => {\n  const [file, setFile] = useState<File | null>(null);\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files ? e.target.files[0] : null;\n    setFile(file);\n    setError(null); // Reset error when a new file is selected\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setError('Please select a file before uploading');\n      return;\n    }\n    \n    const formData = new FormData();\n    formData.append('file', file);\n    \n    setUploading(true); // Show uploading state\n    setSuccess(null);\n    setError(null);\n    \n    try {\n      const response = await fetch(`/api/expenses/upload-expenses`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${userEmail}`  // אם יש צורך לשלוח את ה-email כאן\n        },\n        body: formData\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        setError('Error uploading file: ' + errorText);\n        return;\n      }\n      \n      setSuccess('File uploaded successfully');\n    } catch (error) {\n      setError('Error uploading file: ' + error);\n    } finally {\n      setUploading(false); // Hide uploading state\n    }\n  };\n\n  return (\n    <div>\n      <h3>Upload Expenses from Excel</h3>\n      \n      <input \n        type=\"file\" \n        accept=\".xlsx, .xls, .csv\" \n        onChange={handleFileChange} \n      />\n      \n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      {success && <div style={{ color: 'green' }}>{success}</div>}\n      \n      <button \n        onClick={handleUpload} \n        disabled={!file || uploading}\n      >\n        {uploading ? 'Uploading...' : 'Upload'}\n      </button>\n    </div>\n  );\n};\n\nexport default UploadExpenses;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}