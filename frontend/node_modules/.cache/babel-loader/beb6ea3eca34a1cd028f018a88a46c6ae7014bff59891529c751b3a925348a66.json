{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/MonthlyBudget/MonthlyBudget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CategorySelector from './CategorySelector';\nimport BudgetInput from './BudgetInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyBudget = ({\n  userEmail\n}) => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [monthlyBudgets, setMonthlyBudgets] = useState([]);\n  useEffect(() => {\n    // Fetch categories from the backend\n    fetch(`/api/categories?email=${userEmail}`).then(response => response.json()).then(data => setCategories(data)).catch(error => console.error('Error fetching categories:', error));\n  }, [userEmail]);\n  useEffect(() => {\n    // Fetch monthly budgets from the backend\n    fetch(`/api/monthlyBudgets/${userEmail}`).then(response => response.json()).then(data => {\n      console.log('Fetched budgets:', data); // Log the fetched data\n      if (Array.isArray(data)) {\n        setMonthlyBudgets(data);\n      } else {\n        console.error('Error: Data is not an array', data);\n      }\n    }).catch(error => console.error('Error fetching budgets:', error));\n  }, [userEmail]);\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n  };\n  const handleBudgetSave = amount => {\n    // Save budget to the backend\n    const data = {\n      email: userEmail,\n      categoryName: selectedCategory,\n      budgetAmount: parseFloat(amount),\n      spentAmount: 0,\n      // Initial value\n      budgetMonth: new Date().toISOString()\n    };\n    fetch('/api/monthlyBudgets', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      alert('Budget saved successfully!');\n      if (Array.isArray(monthlyBudgets)) {\n        setMonthlyBudgets([...monthlyBudgets, data]);\n      } else {\n        console.error('Error: monthlyBudgets is not an array', monthlyBudgets);\n      }\n    }).catch(error => console.error('Error saving budget:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategorySelector, {\n      categories: categories,\n      onSelect: handleCategorySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(BudgetInput, {\n      onSave: handleBudgetSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Monthly Budgets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(monthlyBudgets) && monthlyBudgets.map((budget, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [new Date(budget.BudgetMonth).toLocaleDateString(), \" - \", budget.CategoryName, \": $\", budget.BudgetAmount, \" (Spent: $\", budget.SpentAmount, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyBudget, \"Vf8o4R0FMl7eFuKgpDL5rD3TPyk=\");\n_c = MonthlyBudget;\nexport default MonthlyBudget;\nvar _c;\n$RefreshReg$(_c, \"MonthlyBudget\");","map":{"version":3,"names":["React","useState","useEffect","CategorySelector","BudgetInput","jsxDEV","_jsxDEV","MonthlyBudget","userEmail","_s","categories","setCategories","selectedCategory","setSelectedCategory","monthlyBudgets","setMonthlyBudgets","fetch","then","response","json","data","catch","error","console","log","Array","isArray","handleCategorySelect","category","handleBudgetSave","amount","email","categoryName","budgetAmount","parseFloat","spentAmount","budgetMonth","Date","toISOString","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onSave","map","budget","index","BudgetMonth","toLocaleDateString","CategoryName","BudgetAmount","SpentAmount","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/MonthlyBudget/MonthlyBudget.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CategorySelector from './CategorySelector';\nimport BudgetInput from './BudgetInput';\n\nconst MonthlyBudget = ({ userEmail }) => {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [monthlyBudgets, setMonthlyBudgets] = useState([]);\n\n  useEffect(() => {\n    // Fetch categories from the backend\n    fetch(`/api/categories?email=${userEmail}`)\n      .then(response => response.json())\n      .then(data => setCategories(data))\n      .catch(error => console.error('Error fetching categories:', error));\n  }, [userEmail]);\n\n  useEffect(() => {\n    // Fetch monthly budgets from the backend\n    fetch(`/api/monthlyBudgets/${userEmail}`)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Fetched budgets:', data); // Log the fetched data\n        if (Array.isArray(data)) {\n          setMonthlyBudgets(data);\n        } else {\n          console.error('Error: Data is not an array', data);\n        }\n      })\n      .catch(error => console.error('Error fetching budgets:', error));\n  }, [userEmail]);\n\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleBudgetSave = (amount) => {\n    // Save budget to the backend\n    const data = {\n      email: userEmail,\n      categoryName: selectedCategory,\n      budgetAmount: parseFloat(amount),\n      spentAmount: 0, // Initial value\n      budgetMonth: new Date().toISOString()\n    };\n\n    fetch('/api/monthlyBudgets', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(response => response.json())\n      .then(data => {\n        alert('Budget saved successfully!');\n        if (Array.isArray(monthlyBudgets)) {\n          setMonthlyBudgets([...monthlyBudgets, data]);\n        } else {\n          console.error('Error: monthlyBudgets is not an array', monthlyBudgets);\n        }\n      })\n      .catch(error => console.error('Error saving budget:', error));\n  };\n\n  return (\n    <div>\n      <h2>Monthly Budget</h2>\n      <CategorySelector categories={categories} onSelect={handleCategorySelect} />\n      {selectedCategory && <BudgetInput onSave={handleBudgetSave} />}\n      \n      <h3>Your Monthly Budgets</h3>\n      <ul>\n        {Array.isArray(monthlyBudgets) && monthlyBudgets.map((budget, index) => (\n          <li key={index}>\n            {new Date(budget.BudgetMonth).toLocaleDateString()} - {budget.CategoryName}: ${budget.BudgetAmount} (Spent: ${budget.SpentAmount})\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MonthlyBudget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}