{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/styles.css'; // Correct import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [email, setEmail] = useState('example@example.com');\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses?email=${email}`);\n        const data = await response.json();\n        setExpenses(data);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n    const fetchIncomes = async () => {\n      try {\n        const response = await fetch(`/api/incomes?email=${email}`);\n        const data = await response.json();\n        setIncomes(data);\n      } catch (error) {\n        console.error('Error fetching incomes:', error);\n      }\n    };\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(`/api/categories?email=${email}`);\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchExpenses();\n    fetchIncomes();\n    fetchCategories();\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setExpenses([...expenses, {\n          ExpenseID: expenses.length + 1,\n          Description: '',\n          Amount: 0,\n          Date: '',\n          CategoryName: ''\n        }]),\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: expense.Description,\n            onChange: e => {\n              const newExpenses = [...expenses];\n              newExpenses[index].Description = e.target.value;\n              setExpenses(newExpenses);\n            },\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: expense.Amount,\n            onChange: e => {\n              const newExpenses = [...expenses];\n              newExpenses[index].Amount = parseFloat(e.target.value);\n              setExpenses(newExpenses);\n            },\n            placeholder: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: expense.Date,\n            onChange: e => {\n              const newExpenses = [...expenses];\n              newExpenses[index].Date = e.target.value;\n              setExpenses(newExpenses);\n            },\n            placeholder: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: expense.CategoryName,\n            onChange: e => {\n              const newExpenses = [...expenses];\n              newExpenses[index].CategoryName = e.target.value;\n              setExpenses(newExpenses);\n            },\n            children: categories.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, categoryIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, expense.ExpenseID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Incomes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIncomes([...incomes, {\n          IncomeID: incomes.length + 1,\n          Description: '',\n          Amount: 0,\n          Date: '',\n          CategoryName: ''\n        }]),\n        children: \"Add Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: incomes.map((income, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: income.Description,\n            onChange: e => {\n              const newIncomes = [...incomes];\n              newIncomes[index].Description = e.target.value;\n              setIncomes(newIncomes);\n            },\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: income.Amount,\n            onChange: e => {\n              const newIncomes = [...incomes];\n              newIncomes[index].Amount = parseFloat(e.target.value);\n              setIncomes(newIncomes);\n            },\n            placeholder: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: income.Date,\n            onChange: e => {\n              const newIncomes = [...incomes];\n              newIncomes[index].Date = e.target.value;\n              setIncomes(newIncomes);\n            },\n            placeholder: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: income.CategoryName,\n            onChange: e => {\n              const newIncomes = [...incomes];\n              newIncomes[index].CategoryName = e.target.value;\n              setIncomes(newIncomes);\n            },\n            children: categories.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, categoryIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, income.IncomeID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"WNiPqiWwyRUDMWTXmlNLfy2wwPA=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Transactions","_s","email","setEmail","expenses","setExpenses","incomes","setIncomes","categories","setCategories","fetchExpenses","response","fetch","data","json","error","console","fetchIncomes","fetchCategories","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ExpenseID","length","Description","Amount","Date","CategoryName","map","expense","index","newExpenses","parseFloat","category","categoryIndex","IncomeID","income","newIncomes","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles/styles.css'; // Correct import path\n\ninterface Expense {\n  ExpenseID: number;\n  Description: string;\n  Amount: number;\n  Date: string;\n  CategoryName: string;\n}\n\ninterface Income {\n  IncomeID: number;\n  Description: string;\n  Amount: number;\n  Date: string;\n  CategoryName: string;\n}\n\nconst Transactions: React.FC = () => {\n  const [email, setEmail] = useState('example@example.com');\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [incomes, setIncomes] = useState<Income[]>([]);\n  const [categories, setCategories] = useState<string[]>([]);\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses?email=${email}`);\n        const data = await response.json();\n        setExpenses(data);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n\n    const fetchIncomes = async () => {\n      try {\n        const response = await fetch(`/api/incomes?email=${email}`);\n        const data = await response.json();\n        setIncomes(data);\n      } catch (error) {\n        console.error('Error fetching incomes:', error);\n      }\n    };\n\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(`/api/categories?email=${email}`);\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n\n    fetchExpenses();\n    fetchIncomes();\n    fetchCategories();\n  }, [email]);\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Enter your email\"\n      />\n      {/* Expenses */}\n      <div>\n        <h2>Expenses</h2>\n        <button onClick={() => setExpenses([...expenses, { ExpenseID: expenses.length + 1, Description: '', Amount: 0, Date: '', CategoryName: '' }])}>\n          Add Expense\n        </button>\n        <ul>\n          {expenses.map((expense, index) => (\n            <li key={expense.ExpenseID}>\n              <input\n                type=\"text\"\n                value={expense.Description}\n                onChange={(e) => {\n                  const newExpenses = [...expenses];\n                  newExpenses[index].Description = e.target.value;\n                  setExpenses(newExpenses);\n                }}\n                placeholder=\"Description\"\n              />\n              <input\n                type=\"number\"\n                value={expense.Amount}\n                onChange={(e) => {\n                  const newExpenses = [...expenses];\n                  newExpenses[index].Amount = parseFloat(e.target.value);\n                  setExpenses(newExpenses);\n                }}\n                placeholder=\"Amount\"\n              />\n              <input\n                type=\"date\"\n                value={expense.Date}\n                onChange={(e) => {\n                  const newExpenses = [...expenses];\n                  newExpenses[index].Date = e.target.value;\n                  setExpenses(newExpenses);\n                }}\n                placeholder=\"Date\"\n              />\n              <select\n                value={expense.CategoryName}\n                onChange={(e) => {\n                  const newExpenses = [...expenses];\n                  newExpenses[index].CategoryName = e.target.value;\n                  setExpenses(newExpenses);\n                }}\n              >\n                {categories.map((category, categoryIndex) => (\n                  <option key={categoryIndex} value={category}>\n                    {category}\n                  </option>\n                ))}\n              </select>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Incomes */}\n      <div>\n        <h2>Incomes</h2>\n        <button onClick={() => setIncomes([...incomes, { IncomeID: incomes.length + 1, Description: '', Amount: 0, Date: '', CategoryName: '' }])}>\n          Add Income\n        </button>\n        <ul>\n          {incomes.map((income, index) => (\n            <li key={income.IncomeID}>\n              <input\n                type=\"text\"\n                value={income.Description}\n                onChange={(e) => {\n                  const newIncomes = [...incomes];\n                  newIncomes[index].Description = e.target.value;\n                  setIncomes(newIncomes);\n                }}\n                placeholder=\"Description\"\n              />\n              <input\n                type=\"number\"\n                value={income.Amount}\n                onChange={(e) => {\n                  const newIncomes = [...incomes];\n                  newIncomes[index].Amount = parseFloat(e.target.value);\n                  setIncomes(newIncomes);\n                }}\n                placeholder=\"Amount\"\n              />\n              <input\n                type=\"date\"\n                value={income.Date}\n                onChange={(e) => {\n                  const newIncomes = [...incomes];\n                  newIncomes[index].Date = e.target.value;\n                  setIncomes(newIncomes);\n                }}\n                placeholder=\"Date\"\n              />\n              <select\n                value={income.CategoryName}\n                onChange={(e) => {\n                  const newIncomes = [...incomes];\n                  newIncomes[index].CategoryName = e.target.value;\n                  setIncomes(newIncomes);\n                }}\n              >\n                {categories.map((category, categoryIndex) => (\n                  <option key={categoryIndex} value={category}>\n                    {category}\n                  </option>\n                ))}\n              </select>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}