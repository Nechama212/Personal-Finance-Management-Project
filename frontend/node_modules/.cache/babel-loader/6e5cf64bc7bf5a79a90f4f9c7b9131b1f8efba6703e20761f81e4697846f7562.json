{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Categories.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Importing the Category interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categories = ({\n  categories,\n  setCategories\n}) => {\n  _s();\n  const [newCategory, setNewCategory] = useState('');\n  const handleAddCategory = () => {\n    const newCat = {\n      CategoryID: categories.length + 1,\n      // Example of how to generate a new ID\n      CategoryName: newCategory,\n      Email: 'example@example.com' // Replace with actual email if needed\n    };\n    setCategories([...categories, newCat]);\n    setNewCategory('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCategory,\n      onChange: e => setNewCategory(e.target.value),\n      placeholder: \"New Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCategory,\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: category.CategoryName\n      }, category.CategoryID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Categories, \"OooAsQ0XEagnAaiCyAMPvVUmqlc=\");\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Categories","categories","setCategories","_s","newCategory","setNewCategory","handleAddCategory","newCat","CategoryID","length","CategoryName","Email","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","category","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Categories.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Category } from '../types'; // Importing the Category interface\n\ninterface CategoriesProps {\n  categories: Category[];\n  setCategories: React.Dispatch<React.SetStateAction<Category[]>>;\n}\n\nconst Categories: React.FC<CategoriesProps> = ({ categories, setCategories }) => {\n  const [newCategory, setNewCategory] = useState('');\n\n  const handleAddCategory = () => {\n    const newCat: Category = {\n      CategoryID: categories.length + 1, // Example of how to generate a new ID\n      CategoryName: newCategory,\n      Email: 'example@example.com' // Replace with actual email if needed\n    };\n    setCategories([...categories, newCat]);\n    setNewCategory('');\n  };\n\n  return (\n    <div>\n      <h2>Categories</h2>\n      <input\n        type=\"text\"\n        value={newCategory}\n        onChange={(e) => setNewCategory(e.target.value)}\n        placeholder=\"New Category\"\n      />\n      <button onClick={handleAddCategory}>Add Category</button>\n      <ul>\n        {categories.map(category => (\n          <li key={category.CategoryID}>{category.CategoryName}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Categories;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AACb;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOrC,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,MAAgB,GAAG;MACvBC,UAAU,EAAEP,UAAU,CAACQ,MAAM,GAAG,CAAC;MAAE;MACnCC,YAAY,EAAEN,WAAW;MACzBO,KAAK,EAAE,qBAAqB,CAAC;IAC/B,CAAC;IACDT,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEM,MAAM,CAAC,CAAC;IACtCF,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,WAAY;MACnBe,QAAQ,EAAGC,CAAC,IAAKf,cAAc,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAc;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEjB,iBAAkB;MAAAM,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDjB,OAAA;MAAAa,QAAA,EACGX,UAAU,CAACuB,GAAG,CAACC,QAAQ,iBACtB1B,OAAA;QAAAa,QAAA,EAA+Ba,QAAQ,CAACf;MAAY,GAA3Ce,QAAQ,CAACjB,UAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA9BIH,UAAqC;AAAA0B,EAAA,GAArC1B,UAAqC;AAgC3C,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}