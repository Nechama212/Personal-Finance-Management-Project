{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\n\n// Define interfaces for Expense and Income objects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const email = \"example@example.com\";\n  const expensesRef = useRef([]);\n  const incomesRef = useRef([]);\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/expenses/${email}`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const text = await response.text();\n        console.log(\"Response text:\", text);\n        try {\n          const data = JSON.parse(text);\n          const mappedData = data.map(expense => ({\n            id: expense.ExpenseID,\n            description: expense.Description,\n            amount: expense.Amount,\n            date: expense.Date,\n            categoryName: expense.CategoryName\n          }));\n          expensesRef.current = mappedData;\n          setExpenses(mappedData);\n        } catch (jsonError) {\n          if (jsonError instanceof Error) {\n            throw new Error('Failed to parse JSON: ' + jsonError.message);\n          } else {\n            throw new Error('Failed to parse JSON');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      }\n    };\n    const fetchIncomes = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/incomes/${email}`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const text = await response.text();\n        console.log(\"Response text:\", text);\n        try {\n          const data = JSON.parse(text);\n          const mappedData = data.map(income => ({\n            id: income.IncomeID,\n            description: income.Description,\n            amount: income.Amount,\n            date: income.Date,\n            categoryName: income.CategoryName\n          }));\n          incomesRef.current = mappedData;\n          setIncomes(mappedData);\n        } catch (jsonError) {\n          if (jsonError instanceof Error) {\n            throw new Error('Failed to parse JSON: ' + jsonError.message);\n          } else {\n            throw new Error('Failed to parse JSON');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching incomes:\", error);\n      }\n    };\n    fetchExpenses();\n    fetchIncomes();\n  }, [email]);\n  const createExpense = useCallback(async newExpense => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/expenses`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newExpense)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const createdExpense = await response.json();\n      setExpenses(prevExpenses => [...prevExpenses, createdExpense]);\n    } catch (error) {\n      console.error(\"Error creating expense:\", error);\n    }\n  }, []);\n  const updateExpense = useCallback(async (id, updatedExpense) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/expenses/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedExpense)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const result = await response.json();\n      setExpenses(prevExpenses => prevExpenses.map(expense => expense.id === id ? result : expense));\n    } catch (error) {\n      console.error(\"Error updating expense:\", error);\n    }\n  }, []);\n  const deleteExpense = useCallback(async id => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/expenses/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      setExpenses(prevExpenses => prevExpenses.filter(expense => expense.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting expense:\", error);\n    }\n  }, []);\n  const createIncome = useCallback(async newIncome => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/incomes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newIncome)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const createdIncome = await response.json();\n      setIncomes(prevIncomes => [...prevIncomes, createdIncome]);\n    } catch (error) {\n      console.error(\"Error creating income:\", error);\n    }\n  }, []);\n  const updateIncome = useCallback(async (id, updatedIncome) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/incomes/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedIncome)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const result = await response.json();\n      setIncomes(prevIncomes => prevIncomes.map(income => income.id === id ? result : income));\n    } catch (error) {\n      console.error(\"Error updating income:\", error);\n    }\n  }, []);\n  const deleteIncome = useCallback(async id => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/incomes/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      setIncomes(prevIncomes => prevIncomes.filter(income => income.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting income:\", error);\n    }\n  }, []);\n  const [editExpenseId, setEditExpenseId] = useState(null);\n  const [editIncomeId, setEditIncomeId] = useState(null);\n  const [editExpense, setEditExpense] = useState({\n    description: '',\n    amount: 0,\n    date: '',\n    categoryName: ''\n  });\n  const [editIncome, setEditIncome] = useState({\n    description: '',\n    amount: 0,\n    date: '',\n    categoryName: ''\n  });\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toISOString().split('T')[0];\n  };\n  const startEditExpense = expense => {\n    setEditExpenseId(expense.id);\n    setEditExpense({\n      description: expense.description,\n      amount: expense.amount,\n      date: formatDate(expense.date),\n      categoryName: expense.categoryName\n    });\n  };\n  const startEditIncome = income => {\n    setEditIncomeId(income.id);\n    setEditIncome({\n      description: income.description,\n      amount: income.amount,\n      date: formatDate(income.date),\n      categoryName: income.categoryName\n    });\n  };\n  const handleEditExpenseChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditExpense(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleEditIncomeChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditIncome(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleEditExpenseSubmit = async e => {\n    e.preventDefault();\n    if (editExpenseId !== null) {\n      await updateExpense(editExpenseId, editExpense);\n      setEditExpenseId(null);\n      setEditExpense({\n        description: '',\n        amount: 0,\n        date: '',\n        categoryName: ''\n      });\n    }\n  };\n  const handleEditIncomeSubmit = async e => {\n    e.preventDefault();\n    if (editIncomeId !== null) {\n      await updateIncome(editIncomeId, editIncome);\n      setEditIncomeId(null);\n      setEditIncome({\n        description: '',\n        amount: 0,\n        date: '',\n        categoryName: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Expenses, {\n        expenses: expenses,\n        updateExpense: startEditExpense,\n        deleteExpense: deleteExpense,\n        createExpense: createExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Incomes, {\n        incomes: incomes,\n        updateIncome: startEditIncome,\n        deleteIncome: deleteIncome,\n        createIncome: createIncome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), editExpenseId !== null && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditExpenseSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: editExpense.description,\n          onChange: handleEditExpenseChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: editExpense.amount,\n          onChange: handleEditExpenseChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: editExpense.date,\n          onChange: handleEditExpenseChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"categoryName\",\n          value: editExpense.categoryName,\n          onChange: handleEditExpenseChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditExpenseId(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), editIncomeId !== null && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditIncomeSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: editIncome.description,\n          onChange: handleEditIncomeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: editIncome.amount,\n          onChange: handleEditIncomeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: editIncome.date,\n          onChange: handleEditIncomeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"categoryName\",\n          value: editIncome.categoryName,\n          onChange: handleEditIncomeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditIncomeId(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"u2eWQj90M08BBZaRn4VlndqbYtw=\");\n_c = Transactions;\nconst Expenses = ({\n  expenses,\n  updateExpense,\n  deleteExpense,\n  createExpense\n}) => {\n  _s2();\n  const [newExpense, setNewExpense] = useState({\n    description: '',\n    amount: 0,\n    date: '',\n    categoryName: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewExpense(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createExpense(newExpense);\n    setNewExpense({\n      description: '',\n      amount: 0,\n      date: '',\n      categoryName: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [expense.date, \": \", expense.description, \" - $\", expense.amount, \" (Category: \", expense.categoryName, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateExpense(expense),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteExpense(expense.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }, this)]\n      }, expense.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: newExpense.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: newExpense.amount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: newExpense.date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"categoryName\",\n          value: newExpense.categoryName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 9\n  }, this);\n};\n_s2(Expenses, \"woG7SmCU/o3C0HetWcJRxdEwktY=\");\n_c2 = Expenses;\nconst Incomes = ({\n  incomes,\n  updateIncome,\n  deleteIncome,\n  createIncome\n}) => {\n  _s3();\n  const [newIncome, setNewIncome] = useState({\n    description: '',\n    amount: 0,\n    date: '',\n    categoryName: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewIncome(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createIncome(newIncome);\n    setNewIncome({\n      description: '',\n      amount: 0,\n      date: '',\n      categoryName: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incomes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: incomes.map(income => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [income.date, \": \", income.description, \" - $\", income.amount, \" (Category: \", income.categoryName, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateIncome(income),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteIncome(income.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 15\n        }, this)]\n      }, income.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: newIncome.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: newIncome.amount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: newIncome.date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"categoryName\",\n          value: newIncome.categoryName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 9\n  }, this);\n};\n_s3(Incomes, \"wVGugePeKKLUcuu3xAuZcY/MUj8=\");\n_c3 = Incomes;\nexport default Transactions;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Transactions\");\n$RefreshReg$(_c2, \"Expenses\");\n$RefreshReg$(_c3, \"Incomes\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","Transactions","_s","expenses","setExpenses","incomes","setIncomes","email","expensesRef","incomesRef","fetchExpenses","response","fetch","ok","Error","statusText","text","console","log","data","JSON","parse","mappedData","map","expense","id","ExpenseID","description","Description","amount","Amount","date","Date","categoryName","CategoryName","current","jsonError","message","error","fetchIncomes","income","IncomeID","createExpense","newExpense","method","headers","body","stringify","createdExpense","json","prevExpenses","updateExpense","updatedExpense","result","deleteExpense","filter","createIncome","newIncome","createdIncome","prevIncomes","updateIncome","updatedIncome","deleteIncome","editExpenseId","setEditExpenseId","editIncomeId","setEditIncomeId","editExpense","setEditExpense","editIncome","setEditIncome","formatDate","dateString","toISOString","split","startEditExpense","startEditIncome","handleEditExpenseChange","e","name","value","target","prev","handleEditIncomeChange","handleEditExpenseSubmit","preventDefault","handleEditIncomeSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","Expenses","Incomes","onSubmit","type","onChange","onClick","_c","_s2","setNewExpense","handleChange","handleSubmit","_c2","_s3","setNewIncome","_c3","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\n\n// Define interfaces for Expense and Income objects\ninterface Expense {\n  id: number;\n  description: string;\n  amount: number;\n  date: string;\n  categoryName: string;\n}\n\ninterface Income {\n  id: number;\n  description: string;\n  amount: number;\n  date: string;\n  categoryName: string;\n}\n\nconst Transactions: React.FC = () => {\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [incomes, setIncomes] = useState<Income[]>([]);\n  const email = \"example@example.com\";\n  const expensesRef = useRef<Expense[]>([]);\n  const incomesRef = useRef<Income[]>([]);\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/expenses/${email}`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const text = await response.text();\n        console.log(\"Response text:\", text);\n        try {\n          const data = JSON.parse(text);\n          const mappedData = data.map((expense: any) => ({\n            id: expense.ExpenseID,\n            description: expense.Description,\n            amount: expense.Amount,\n            date: expense.Date,\n            categoryName: expense.CategoryName\n          }));\n          expensesRef.current = mappedData;\n          setExpenses(mappedData);\n        } catch (jsonError) {\n          if (jsonError instanceof Error) {\n            throw new Error('Failed to parse JSON: ' + jsonError.message);\n          } else {\n            throw new Error('Failed to parse JSON');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      }\n    };\n\n    const fetchIncomes = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/incomes/${email}`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const text = await response.text();\n        console.log(\"Response text:\", text);\n        try {\n          const data = JSON.parse(text);\n          const mappedData = data.map((income: any) => ({\n            id: income.IncomeID,\n            description: income.Description,\n            amount: income.Amount,\n            date: income.Date,\n            categoryName: income.CategoryName\n          }));\n          incomesRef.current = mappedData;\n          setIncomes(mappedData);\n        } catch (jsonError) {\n          if (jsonError instanceof Error) {\n            throw new Error('Failed to parse JSON: ' + jsonError.message);\n          } else {\n            throw new Error('Failed to parse JSON');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching incomes:\", error);\n      }\n    };\n\n    fetchExpenses();\n    fetchIncomes();\n  }, [email]);\n\n  const createExpense = useCallback(async (newExpense: Omit<Expense, 'id'>) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/expenses`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newExpense)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const createdExpense = await response.json();\n      setExpenses((prevExpenses) => [...prevExpenses, createdExpense]);\n    } catch (error) {\n      console.error(\"Error creating expense:\", error);\n    }\n  }, []);\n\n  const updateExpense = useCallback(async (id: number, updatedExpense: Omit<Expense, 'id'>) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/expenses/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedExpense)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const result = await response.json();\n      setExpenses((prevExpenses) => prevExpenses.map(expense => expense.id === id ? result : expense));\n    } catch (error) {\n      console.error(\"Error updating expense:\", error);\n    }\n  }, []);\n\n  const deleteExpense = useCallback(async (id: number) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/expenses/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      setExpenses((prevExpenses) => prevExpenses.filter(expense => expense.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting expense:\", error);\n    }\n  }, []);\n\n  const createIncome = useCallback(async (newIncome: Omit<Income, 'id'>) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/incomes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newIncome)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const createdIncome = await response.json();\n      setIncomes((prevIncomes) => [...prevIncomes, createdIncome]);\n    } catch (error) {\n      console.error(\"Error creating income:\", error);\n    }\n  }, []);\n  const updateIncome = useCallback(async (id: number, updatedIncome: Omit<Income, 'id'>) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/incomes/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedIncome)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const result = await response.json();\n      setIncomes((prevIncomes) => prevIncomes.map(income => income.id === id ? result : income));\n    } catch (error) {\n      console.error(\"Error updating income:\", error);\n    }\n  }, []);\n\n  const deleteIncome = useCallback(async (id: number) => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/incomes/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      setIncomes((prevIncomes) => prevIncomes.filter(income => income.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting income:\", error);\n    }\n  }, []);\n\n  const [editExpenseId, setEditExpenseId] = useState<number | null>(null);\n  const [editIncomeId, setEditIncomeId] = useState<number | null>(null);\n  const [editExpense, setEditExpense] = useState<Omit<Expense, 'id'>>({ description: '', amount: 0, date: '', categoryName: '' });\n  const [editIncome, setEditIncome] = useState<Omit<Income, 'id'>>({ description: '', amount: 0, date: '', categoryName: '' });\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toISOString().split('T')[0];\n  };\n  \n\n  const startEditExpense = (expense: Expense) => {\n    setEditExpenseId(expense.id);\n    setEditExpense({\n      description: expense.description,\n      amount: expense.amount,\n      date: formatDate(expense.date),\n      categoryName: expense.categoryName\n    });\n  };\n  \n  const startEditIncome = (income: Income) => {\n    setEditIncomeId(income.id);\n    setEditIncome({\n      description: income.description,\n      amount: income.amount,\n      date: formatDate(income.date),\n      categoryName: income.categoryName\n    });\n  };\n  \n\n  const handleEditExpenseChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setEditExpense(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleEditIncomeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setEditIncome(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleEditExpenseSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editExpenseId !== null) {\n      await updateExpense(editExpenseId, editExpense);\n      setEditExpenseId(null);\n      setEditExpense({ description: '', amount: 0, date: '', categoryName: '' });\n    }\n  };\n\n  const handleEditIncomeSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editIncomeId !== null) {\n      await updateIncome(editIncomeId, editIncome);\n      setEditIncomeId(null);\n      setEditIncome({ description: '', amount: 0, date: '', categoryName: '' });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Transactions</h1>\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        <Expenses\n          expenses={expenses}\n          updateExpense={startEditExpense}\n          deleteExpense={deleteExpense}\n          createExpense={createExpense}\n        />\n        <Incomes\n          incomes={incomes}\n          updateIncome={startEditIncome}\n          deleteIncome={deleteIncome}\n          createIncome={createIncome}\n          />\n          </div>\n    \n          {editExpenseId !== null && (\n            <form onSubmit={handleEditExpenseSubmit}>\n              <h2>Edit Expense</h2>\n              <label>\n                Description:\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  value={editExpense.description}\n                  onChange={handleEditExpenseChange}\n                />\n              </label>\n              <label>\n                Amount:\n                <input\n                  type=\"number\"\n                  name=\"amount\"\n                  value={editExpense.amount}\n                  onChange={handleEditExpenseChange}\n                />\n              </label>\n              <label>\n                Date:\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  value={editExpense.date}\n                  onChange={handleEditExpenseChange}\n                />\n              </label>\n              <label>\n                Category Name:\n                <input\n                  type=\"text\"\n                  name=\"categoryName\"\n                  value={editExpense.categoryName}\n                  onChange={handleEditExpenseChange}\n                />\n              </label>\n              <button type=\"submit\">Save</button>\n              <button onClick={() => setEditExpenseId(null)}>Cancel</button>\n            </form>\n          )}\n    \n          {editIncomeId !== null && (\n            <form onSubmit={handleEditIncomeSubmit}>\n              <h2>Edit Income</h2>\n              <label>\n                Description:\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  value={editIncome.description}\n                  onChange={handleEditIncomeChange}\n                />\n              </label>\n              <label>\n                Amount:\n                <input\n                  type=\"number\"\n                  name=\"amount\"\n                  value={editIncome.amount}\n                  onChange={handleEditIncomeChange}\n                />\n              </label>\n              <label>\n                Date:\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  value={editIncome.date}\n                  onChange={handleEditIncomeChange}\n                />\n              </label>\n              <label>\n                Category Name:\n                <input\n                  type=\"text\"\n                  name=\"categoryName\"\n                  value={editIncome.categoryName}\n                  onChange={handleEditIncomeChange}\n                />\n              </label>\n              <button type=\"submit\">Save</button>\n              <button onClick={() => setEditIncomeId(null)}>Cancel</button>\n            </form>\n          )}\n        </div>\n      );\n    };\n    \n    const Expenses: React.FC<{ expenses: Expense[], updateExpense: (expense: Expense) => void, deleteExpense: (id: number) => void, createExpense: (newExpense: Omit<Expense, 'id'>) => void }> = ({ expenses, updateExpense, deleteExpense, createExpense }) => {\n      const [newExpense, setNewExpense] = useState<Omit<Expense, 'id'>>({ description: '', amount: 0, date: '', categoryName: '' });\n    \n      const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setNewExpense(prev => ({ ...prev, [name]: value }));\n      };\n    \n      const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        createExpense(newExpense);\n        setNewExpense({ description: '', amount: 0, date: '', categoryName: '' });\n      };\n    \n      return (\n        <div>\n          <h2>Expenses</h2>\n          <ul>\n          {expenses.map(expense => (\n            <li key={expense.id}>\n              {expense.date}: {expense.description} - ${expense.amount} (Category: {expense.categoryName})\n              <button onClick={() => updateExpense(expense)}>Update</button>\n              <button onClick={() => deleteExpense(expense.id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n\n          <form onSubmit={handleSubmit}>\n            <h3>Create Expense</h3>\n            <label>\n              Description:\n              <input\n                type=\"text\"\n                name=\"description\"\n                value={newExpense.description}\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              Amount:\n              <input\n                type=\"number\"\n                name=\"amount\"\n                value={newExpense.amount}\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              Date:\n              <input\n                type=\"date\"\n                name=\"date\"\n                value={newExpense.date}\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              Category Name:\n              <input\n                type=\"text\"\n                name=\"categoryName\"\n                value={newExpense.categoryName}\n                onChange={handleChange}\n              />\n            </label>\n            <button type=\"submit\">Create</button>\n          </form>\n        </div>\n      );\n    };\n    \n    const Incomes: React.FC<{ incomes: Income[], updateIncome: (income: Income) => void, deleteIncome: (id: number) => void, createIncome: (newIncome: Omit<Income, 'id'>) => void }> = ({ incomes, updateIncome, deleteIncome, createIncome }) => {\n      const [newIncome, setNewIncome] = useState<Omit<Income, 'id'>>({ description: '', amount: 0, date: '', categoryName: '' });\n    \n      const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setNewIncome(prev => ({ ...prev, [name]: value }));\n      };\n    \n      const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        createIncome(newIncome);\n        setNewIncome({ description: '', amount: 0, date: '', categoryName: '' });\n      };\n    \n      return (\n        <div>\n          <h2>Incomes</h2>\n         <ul>\n          {incomes.map((income) => (\n            <li key={income.id}>\n              {income.date}: {income.description} - ${income.amount} (Category: {income.categoryName})\n              <button onClick={() => updateIncome(income)}>Update</button>\n              <button onClick={() => deleteIncome(income.id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n\n          <form onSubmit={handleSubmit}>\n            <h3>Create Income</h3>\n            <label>\n              Description:\n              <input\n                type=\"text\"\n                name=\"description\"\n                value={newIncome.description}\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              Amount:\n              <input\n                type=\"number\"\n                name=\"amount\"\n                value={newIncome.amount}\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              Date:\n              <input\n                type=\"date\"\n                name=\"date\"\n                value={newIncome.date}\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              Category Name:\n              <input\n                type=\"text\"\n                name=\"categoryName\"\n                value={newIncome.categoryName}\n                onChange={handleChange}\n              />\n            </label>\n            <button type=\"submit\">Create</button>\n          </form>\n        </div>\n      );\n    };\n    \n    export default Transactions;\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}