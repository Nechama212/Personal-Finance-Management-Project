{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions/Incomes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport CategorySelector from '../MonthlyBudget/CategorySelector'; // Import CategorySelector\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Incomes = ({\n  incomes,\n  updateIncome,\n  deleteIncome,\n  createIncome,\n  addCategory,\n  categories,\n  userEmail\n}) => {\n  _s();\n  const [newIncome, setNewIncome] = useState({\n    Description: '',\n    Amount: 0,\n    Date: '',\n    CategoryName: '',\n    UserEmail: userEmail\n  });\n  const [editingIncome, setEditingIncome] = useState(null);\n  const [error, setError] = useState(null);\n  const [newCategory, setNewCategory] = useState('');\n  const [showForm, setShowForm] = useState(false); // state to show/hide form\n  const [showAddCategory, setShowAddCategory] = useState(false); // Show add category form\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [incomeCategories, setIncomeCategories] = useState(categories); // Add setIncomeCategories\n\n  useEffect(() => {\n    if (userEmail) {\n      fetch(`/api/incomes/${userEmail}`).then(response => response.json()).then(data => {\n        const categoryNames = [...new Set(data.map(income => income.CategoryName.toLowerCase()))];\n        setIncomeCategories(categoryNames);\n      }).catch(error => console.error('Error fetching income categories:', error));\n    }\n  }, [userEmail]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingIncome) {\n      setEditingIncome({\n        ...editingIncome,\n        [name]: name === 'Amount' ? parseFloat(value) : value\n      });\n    } else {\n      setNewIncome(prev => ({\n        ...prev,\n        [name]: name === 'Amount' ? parseFloat(value) : value\n      }));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (editingIncome) {\n      updateIncome({\n        ...editingIncome,\n        CategoryName: selectedCategory || editingIncome.CategoryName\n      });\n      setEditingIncome(null);\n    } else {\n      if (!newIncome.Date) {\n        setError(\"Date is required.\");\n        return;\n      }\n      if (isNaN(newIncome.Amount)) {\n        setError(\"Amount must be a valid number.\");\n        return;\n      }\n      setError(null);\n      createIncome({\n        ...newIncome,\n        CategoryName: selectedCategory || newIncome.CategoryName\n      });\n      setNewIncome({\n        Description: '',\n        Amount: 0,\n        Date: '',\n        CategoryName: '',\n        UserEmail: userEmail\n      });\n    }\n    setShowForm(false); // Close the form after submission\n  };\n  const startEditing = income => {\n    setEditingIncome(income);\n    setShowForm(true); // Show form when editing an income\n  };\n  const handleCategorySelect = category => {\n    if (category === 'Other') {\n      setShowAddCategory(true);\n    } else {\n      setSelectedCategory(category);\n      setShowAddCategory(false);\n    }\n  };\n  const handleAddCategory = async () => {\n    if (newCategory && !incomeCategories.includes(newCategory.toLowerCase())) {\n      try {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            CategoryName: newCategory,\n            Email: userEmail\n          })\n        });\n        if (!response.ok) {\n          const errorMessage = await response.text();\n          console.error(\"Error creating category:\", errorMessage);\n          return;\n        }\n        const addedCategory = await response.json();\n        setIncomeCategories([...incomeCategories, addedCategory.CategoryName.toLowerCase()]);\n        setSelectedCategory(addedCategory.CategoryName.toLowerCase());\n        setShowAddCategory(false);\n        setNewCategory('');\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n      }\n    }\n  };\n  const totalIncomes = useMemo(() => incomes.reduce((acc, income) => acc + income.Amount, 0), [incomes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incomes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      children: \"Add Income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowY: incomes.length > 10 ? 'auto' : 'visible',\n          maxHeight: '400px',\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            marginBottom: '0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [incomes.map(income => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: format(new Date(income.Date), 'dd-MM-yyyy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: income.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u20AA\", income.Amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: income.CategoryName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEditing(income),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteIncome(income.IncomeID),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, income.IncomeID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"\\u20AA\", totalIncomes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowY: 'auto',\n          maxHeight: '400px',\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingIncome ? 'Update Income' : 'Create Income'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Description\",\n          value: editingIncome ? editingIncome.Description : newIncome.Description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Amount\",\n          value: editingIncome ? editingIncome.Amount : newIncome.Amount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"Date\",\n          value: editingIncome ? editingIncome.Date : newIncome.Date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CategorySelector, {\n          categories: [...incomeCategories.map(category => category.toLowerCase()), 'Other'],\n          onSelect: handleCategorySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), showAddCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Add New Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newCategory,\n            onChange: e => setNewCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddCategory,\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingIncome ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Incomes, \"8O0bm+qg1Xn6dq51hw4c2RPlLkQ=\");\n_c = Incomes;\nexport default Incomes;\nvar _c;\n$RefreshReg$(_c, \"Incomes\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","format","CategorySelector","jsxDEV","_jsxDEV","Incomes","incomes","updateIncome","deleteIncome","createIncome","addCategory","categories","userEmail","_s","newIncome","setNewIncome","Description","Amount","Date","CategoryName","UserEmail","editingIncome","setEditingIncome","error","setError","newCategory","setNewCategory","showForm","setShowForm","showAddCategory","setShowAddCategory","selectedCategory","setSelectedCategory","incomeCategories","setIncomeCategories","fetch","then","response","json","data","categoryNames","Set","map","income","toLowerCase","catch","console","handleChange","e","name","value","target","parseFloat","prev","handleSubmit","preventDefault","isNaN","startEditing","handleCategorySelect","category","handleAddCategory","includes","method","headers","body","JSON","stringify","Email","ok","errorMessage","text","addedCategory","totalIncomes","reduce","acc","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","gap","overflowY","length","maxHeight","flex","marginBottom","IncomeID","colSpan","onSubmit","color","type","onChange","onSelect","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions/Incomes.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport CategorySelector from '../MonthlyBudget/CategorySelector'; // Import CategorySelector\nimport { Income, Category } from './TransactionsTypes';\n\nconst Incomes: React.FC<{ \n  incomes: Income[], \n  updateIncome: (income: Income) => void, \n  deleteIncome: (id: number) => void, \n  createIncome: (newIncome: Omit<Income, 'IncomeID'>) => void, \n  addCategory: (categoryName: string) => void,\n  categories: string[],\n  userEmail: string\n}> = ({ incomes, updateIncome, deleteIncome, createIncome, addCategory, categories, userEmail }) => {\n  const [newIncome, setNewIncome] = useState<Omit<Income, 'IncomeID'>>({ Description: '', Amount: 0, Date: '', CategoryName: '', UserEmail: userEmail });\n  const [editingIncome, setEditingIncome] = useState<Income | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [newCategory, setNewCategory] = useState('');\n  const [showForm, setShowForm] = useState(false); // state to show/hide form\n  const [showAddCategory, setShowAddCategory] = useState(false); // Show add category form\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\n  const [incomeCategories, setIncomeCategories] = useState<string[]>(categories); // Add setIncomeCategories\n\n  useEffect(() => {\n    if (userEmail) {\n      fetch(`/api/incomes/${userEmail}`)\n        .then(response => response.json())\n        .then((data: Income[]) => {\n          const categoryNames = [...new Set(data.map(income => income.CategoryName.toLowerCase()))];\n          setIncomeCategories(categoryNames);\n        })\n        .catch(error => console.error('Error fetching income categories:', error));\n    }\n  }, [userEmail]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    if (editingIncome) {\n      setEditingIncome({ ...editingIncome, [name]: name === 'Amount' ? parseFloat(value) : value });\n    } else {\n      setNewIncome(prev => ({ ...prev, [name]: name === 'Amount' ? parseFloat(value) : value }));\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (editingIncome) {\n      updateIncome({ ...editingIncome, CategoryName: selectedCategory || editingIncome.CategoryName });\n      setEditingIncome(null);\n    } else {\n      if (!newIncome.Date) {\n        setError(\"Date is required.\");\n        return;\n      }\n\n      if (isNaN(newIncome.Amount)) {\n        setError(\"Amount must be a valid number.\");\n        return;\n      }\n\n      setError(null);\n      createIncome({ ...newIncome, CategoryName: selectedCategory || newIncome.CategoryName });\n      setNewIncome({ Description: '', Amount: 0, Date: '', CategoryName: '', UserEmail: userEmail });\n    }\n    setShowForm(false); // Close the form after submission\n  };\n\n  const startEditing = (income: Income) => {\n    setEditingIncome(income);\n    setShowForm(true); // Show form when editing an income\n  };\n\n  const handleCategorySelect = (category: string) => {\n    if (category === 'Other') {\n      setShowAddCategory(true);\n    } else {\n      setSelectedCategory(category);\n      setShowAddCategory(false);\n    }\n  };\n\n  const handleAddCategory = async () => {\n    if (newCategory && !incomeCategories.includes(newCategory.toLowerCase())) {\n      try {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ CategoryName: newCategory, Email: userEmail }),\n        });\n\n        if (!response.ok) {\n          const errorMessage = await response.text();\n          console.error(\"Error creating category:\", errorMessage);\n          return;\n        }\n\n        const addedCategory = await response.json();\n        setIncomeCategories([...incomeCategories, addedCategory.CategoryName.toLowerCase()]);\n        setSelectedCategory(addedCategory.CategoryName.toLowerCase());\n        setShowAddCategory(false);\n        setNewCategory('');\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n      }\n    }\n  };\n\n  const totalIncomes = useMemo(() => incomes.reduce((acc, income) => acc + income.Amount, 0), [incomes]);\n\n  return (\n    <div>\n      <h2>Incomes</h2>\n      <button onClick={() => setShowForm(true)}>Add Income</button>\n      {/* Flex container for side-by-side tables */}\n      <div style={{ display: 'flex', gap: '10px' }}>\n        {/* Incomes table */}\n        <div\n          style={{\n            overflowY: incomes.length > 10 ? 'auto' : 'visible',\n            maxHeight: '400px',\n            flex: 1,\n          }}\n        >\n          <table style={{ marginBottom: '0px' }}>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Description</th>\n                <th>Amount</th>\n                <th>Category</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {incomes.map(income => (\n                <tr key={income.IncomeID}>\n                  <td>{format(new Date(income.Date), 'dd-MM-yyyy')}</td>\n                  <td>{income.Description}</td>\n                  <td>₪{income.Amount}</td>\n                  <td>{income.CategoryName}</td>\n                  <td>\n                    <button onClick={() => startEditing(income)}>Update</button>\n                    <button onClick={() => deleteIncome(income.IncomeID)}>Delete</button>\n                  </td>\n                </tr>\n              ))}\n              <tr>\n                <td colSpan={2}><strong>Total</strong></td>\n                <td><strong>₪{totalIncomes}</strong></td>\n                <td colSpan={2}></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \n        {/* Expenses table (add your expense table here in a similar manner) */}\n        <div\n          style={{\n            overflowY: 'auto',\n            maxHeight: '400px',\n            flex: 1,\n          }}\n        >\n          {/* Here comes the Expenses table */}\n        </div>\n      </div>\n      \n      {/* Income form */}\n      {showForm && (\n        <form onSubmit={handleSubmit}>\n          <h3>{editingIncome ? 'Update Income' : 'Create Income'}</h3>\n          {error && <p style={{ color: 'red' }}>{error}</p>}\n          <label>\n            <strong>Description:</strong>\n            <input\n              type=\"text\"\n              name=\"Description\"\n              value={editingIncome ? editingIncome.Description : newIncome.Description}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <strong>Amount:</strong>\n            <input\n              type=\"number\"\n              name=\"Amount\"\n              value={editingIncome ? editingIncome.Amount : newIncome.Amount}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <strong>Date:</strong>\n            <input\n              type=\"date\"\n              name=\"Date\"\n              value={editingIncome ? editingIncome.Date : newIncome.Date}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <strong>Category:</strong>\n            <CategorySelector \n              categories={[...incomeCategories.map(category => category.toLowerCase()), 'Other']} \n              onSelect={handleCategorySelect} \n            />\n          </label>\n          {showAddCategory && (\n            <div>\n              <label>\n                <strong>Add New Category:</strong>\n                <input\n                  type=\"text\"\n                  value={newCategory}\n                  onChange={(e) => setNewCategory(e.target.value)}\n                />\n                <button type=\"button\" onClick={handleAddCategory}>Add Category</button>\n              </label>\n            </div>\n          )}\n          <button type=\"submit\">{editingIncome ? 'Update' : 'Create'}</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Incomes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}