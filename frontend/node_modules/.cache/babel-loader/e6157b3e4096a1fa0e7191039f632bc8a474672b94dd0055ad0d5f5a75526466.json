{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/ExpensesByMonthChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement,\n// Added Bar Element for Bar Chart\nTitle, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement,\n// Register Bar Element for Bar Chart\nTitle, Tooltip, Legend);\nconst ExpensesByMonthChart = ({\n  monthlyExpenses\n}) => {\n  console.log(\"Monthly Expenses data:\", monthlyExpenses);\n\n  // Prepare data for the Bar chart\n  const data = {\n    labels: monthlyExpenses.map(expense => new Date(expense.Date).toLocaleString('en-US', {\n      month: 'long'\n    })),\n    // Month names in English\n    datasets: [{\n      label: 'Expenses Amount',\n      // Label for the chart\n      data: monthlyExpenses.map(expense => expense.Amount),\n      // Expense amounts for each month\n      backgroundColor: '#36A2EB',\n      // Color for the bars\n      borderColor: '#36A2EB',\n      // Border color for the bars\n      borderWidth: 1 // Border width for the bars\n    }]\n  };\n  console.log(\"Chart data:\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses-by-month-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenses by Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpensesByMonthChart;\nexport default ExpensesByMonthChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesByMonthChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","ExpensesByMonthChart","monthlyExpenses","console","log","data","labels","map","expense","Date","toLocaleString","month","datasets","label","Amount","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/ExpensesByMonthChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,  // Added Bar Element for Bar Chart\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,  // Register Bar Element for Bar Chart\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ExpensesByMonthChart: React.FC<{ monthlyExpenses: Array<any> }> = ({ monthlyExpenses }) => {\n  console.log(\"Monthly Expenses data:\", monthlyExpenses);\n\n  // Prepare data for the Bar chart\n  const data = {\n    labels: monthlyExpenses.map(expense => new Date(expense.Date).toLocaleString('en-US', { month: 'long' })),  // Month names in English\n    datasets: [{\n      label: 'Expenses Amount',  // Label for the chart\n      data: monthlyExpenses.map(expense => expense.Amount),  // Expense amounts for each month\n      backgroundColor: '#36A2EB',  // Color for the bars\n      borderColor: '#36A2EB',  // Border color for the bars\n      borderWidth: 1,  // Border width for the bars\n    }],\n  };\n\n  console.log(\"Chart data:\", data);\n\n  return (\n    <div className=\"expenses-by-month-chart\">\n      <h2>Expenses by Month</h2>\n      <Bar data={data} /> {/* Render Bar Chart */}\n    </div>\n  );\n};\n\nexport default ExpensesByMonthChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU;AAAG;AACbC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,UAAU;AAAG;AACbC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,oBAA+D,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC/FC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,eAAe,CAAC;;EAEtD;EACA,MAAMG,IAAI,GAAG;IACXC,MAAM,EAAEJ,eAAe,CAACK,GAAG,CAACC,OAAO,IAAI,IAAIC,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC,CAAC;IAAG;IAC5GC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,iBAAiB;MAAG;MAC3BR,IAAI,EAAEH,eAAe,CAACK,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACM,MAAM,CAAC;MAAG;MACvDC,eAAe,EAAE,SAAS;MAAG;MAC7BC,WAAW,EAAE,SAAS;MAAG;MACzBC,WAAW,EAAE,CAAC,CAAG;IACnB,CAAC;EACH,CAAC;EAEDd,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,IAAI,CAAC;EAEhC,oBACEN,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxB,OAAA,CAACF,GAAG;MAACQ,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACC,EAAA,GAvBIvB,oBAA+D;AAyBrE,eAAeA,oBAAoB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}