{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions/Incomes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { format } from 'date-fns';\nimport CategorySelector from '../MonthlyBudget/CategorySelector'; // Import CategorySelector\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Incomes = ({\n  incomes,\n  updateIncome,\n  deleteIncome,\n  createIncome,\n  addCategory,\n  categories,\n  userEmail\n}) => {\n  _s();\n  const [newIncome, setNewIncome] = useState({\n    Description: '',\n    Amount: 0,\n    Date: '',\n    CategoryName: ''\n  });\n  const [editingIncome, setEditingIncome] = useState(null);\n  const [error, setError] = useState(null);\n  const [newCategory, setNewCategory] = useState('');\n  const [showForm, setShowForm] = useState(false); // state to show/hide form\n  const [showAddCategory, setShowAddCategory] = useState(false); // Show add category form\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [incomeCategories, setIncomeCategories] = useState(categories); // Add setIncomeCategories\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingIncome) {\n      setEditingIncome({\n        ...editingIncome,\n        [name]: name === 'Amount' ? parseFloat(value) : value\n      });\n    } else {\n      setNewIncome(prev => ({\n        ...prev,\n        [name]: name === 'Amount' ? parseFloat(value) : value\n      }));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (editingIncome) {\n      updateIncome({\n        ...editingIncome,\n        CategoryName: selectedCategory || editingIncome.CategoryName\n      });\n      setEditingIncome(null);\n    } else {\n      if (!newIncome.Date) {\n        setError(\"Date is required.\");\n        return;\n      }\n      if (isNaN(newIncome.Amount)) {\n        setError(\"Amount must be a valid number.\");\n        return;\n      }\n      setError(null);\n      createIncome({\n        ...newIncome,\n        CategoryName: selectedCategory || newIncome.CategoryName\n      });\n      setNewIncome({\n        Description: '',\n        Amount: 0,\n        Date: '',\n        CategoryName: ''\n      });\n    }\n    setShowForm(false); // Close the form after submission\n  };\n  const startEditing = income => {\n    setEditingIncome(income);\n    setShowForm(true); // Show form when editing an income\n  };\n  const handleCategorySelect = category => {\n    if (category === 'Other') {\n      setShowAddCategory(true);\n    } else {\n      setSelectedCategory(category);\n      setShowAddCategory(false);\n    }\n  };\n  const handleAddCategory = async () => {\n    if (newCategory && !incomeCategories.includes(newCategory.toLowerCase())) {\n      try {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            CategoryName: newCategory,\n            Email: userEmail\n          })\n        });\n        if (!response.ok) {\n          const errorMessage = await response.text();\n          console.error(\"Error creating category:\", errorMessage);\n          return;\n        }\n        const addedCategory = await response.json();\n        setIncomeCategories([...incomeCategories, addedCategory.CategoryName.toLowerCase()]);\n        setSelectedCategory(addedCategory.CategoryName.toLowerCase());\n        setShowAddCategory(false);\n        setNewCategory('');\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n      }\n    }\n  };\n  const totalIncomes = useMemo(() => incomes.reduce((acc, income) => acc + income.Amount, 0), [incomes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incomes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      children: \"Add Income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [incomes.map(income => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: format(new Date(income.Date), 'dd-MM-yyyy')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: income.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"\\u20AA\", income.Amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: income.CategoryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(income),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteIncome(income.IncomeID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, income.IncomeID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 2,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"\\u20AA\", totalIncomes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingIncome ? 'Update Income' : 'Create Income'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Description\",\n          value: editingIncome ? editingIncome.Description : newIncome.Description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Amount\",\n          value: editingIncome ? editingIncome.Amount : newIncome.Amount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"Date\",\n          value: editingIncome ? editingIncome.Date : newIncome.Date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CategorySelector, {\n          categories: [...incomeCategories.map(category => category.toLowerCase()), 'Other'],\n          onSelect: handleCategorySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), showAddCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Add New Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newCategory,\n            onChange: e => setNewCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddCategory,\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingIncome ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Incomes, \"LMKu/jwv3UQf79GQDY/F1PDrzes=\");\n_c = Incomes;\nexport default Incomes;\nvar _c;\n$RefreshReg$(_c, \"Incomes\");","map":{"version":3,"names":["React","useState","useMemo","format","CategorySelector","jsxDEV","_jsxDEV","Incomes","incomes","updateIncome","deleteIncome","createIncome","addCategory","categories","userEmail","_s","newIncome","setNewIncome","Description","Amount","Date","CategoryName","editingIncome","setEditingIncome","error","setError","newCategory","setNewCategory","showForm","setShowForm","showAddCategory","setShowAddCategory","selectedCategory","setSelectedCategory","incomeCategories","setIncomeCategories","handleChange","e","name","value","target","parseFloat","prev","handleSubmit","preventDefault","isNaN","startEditing","income","handleCategorySelect","category","handleAddCategory","includes","toLowerCase","response","fetch","method","headers","body","JSON","stringify","Email","ok","errorMessage","text","console","addedCategory","json","totalIncomes","reduce","acc","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","IncomeID","colSpan","onSubmit","style","color","type","onChange","onSelect","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions/Incomes.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { format } from 'date-fns';\nimport CategorySelector from '../MonthlyBudget/CategorySelector'; // Import CategorySelector\n\ninterface Income {\n  IncomeID: number;\n  Description: string;\n  Amount: number;\n  Date: string;\n  CategoryName: string;\n}\n\ninterface Category {\n  id: number;\n  name: string;\n}\n\nconst Incomes: React.FC<{ \n  incomes: Income[], \n  updateIncome: (income: Income) => void, \n  deleteIncome: (id: number) => void, \n  createIncome: (newIncome: Omit<Income, 'IncomeID'>) => void, \n  addCategory: (categoryName: string) => void,\n  categories: string[],\n  userEmail: string\n}> = ({ incomes, updateIncome, deleteIncome, createIncome, addCategory, categories, userEmail }) => {\n  const [newIncome, setNewIncome] = useState<Omit<Income, 'IncomeID'>>({ Description: '', Amount: 0, Date: '', CategoryName: '' });\n  const [editingIncome, setEditingIncome] = useState<Income | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [newCategory, setNewCategory] = useState('');\n  const [showForm, setShowForm] = useState(false); // state to show/hide form\n  const [showAddCategory, setShowAddCategory] = useState(false); // Show add category form\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\n  const [incomeCategories, setIncomeCategories] = useState<string[]>(categories); // Add setIncomeCategories\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    if (editingIncome) {\n      setEditingIncome({ ...editingIncome, [name]: name === 'Amount' ? parseFloat(value) : value });\n    } else {\n      setNewIncome(prev => ({ ...prev, [name]: name === 'Amount' ? parseFloat(value) : value }));\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (editingIncome) {\n      updateIncome({ ...editingIncome, CategoryName: selectedCategory || editingIncome.CategoryName });\n      setEditingIncome(null);\n    } else {\n      if (!newIncome.Date) {\n        setError(\"Date is required.\");\n        return;\n      }\n\n      if (isNaN(newIncome.Amount)) {\n        setError(\"Amount must be a valid number.\");\n        return;\n      }\n\n      setError(null);\n      createIncome({ ...newIncome, CategoryName: selectedCategory || newIncome.CategoryName });\n      setNewIncome({ Description: '', Amount: 0, Date: '', CategoryName: '' });\n    }\n    setShowForm(false); // Close the form after submission\n  };\n\n  const startEditing = (income: Income) => {\n    setEditingIncome(income);\n    setShowForm(true); // Show form when editing an income\n  };\n\n  const handleCategorySelect = (category: string) => {\n    if (category === 'Other') {\n      setShowAddCategory(true);\n    } else {\n      setSelectedCategory(category);\n      setShowAddCategory(false);\n    }\n  };\n\n  const handleAddCategory = async () => {\n    if (newCategory && !incomeCategories.includes(newCategory.toLowerCase())) {\n      try {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ CategoryName: newCategory, Email: userEmail }),\n        });\n\n        if (!response.ok) {\n          const errorMessage = await response.text();\n          console.error(\"Error creating category:\", errorMessage);\n          return;\n        }\n\n        const addedCategory = await response.json();\n        setIncomeCategories([...incomeCategories, addedCategory.CategoryName.toLowerCase()]);\n        setSelectedCategory(addedCategory.CategoryName.toLowerCase());\n        setShowAddCategory(false);\n        setNewCategory('');\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n      }\n    }\n  };\n\n  const totalIncomes = useMemo(() => incomes.reduce((acc, income) => acc + income.Amount, 0), [incomes]);\n\n  return (\n    <div>\n      <h2>Incomes</h2>\n      <button onClick={() => setShowForm(true)}>Add Income</button>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Description</th>\n            <th>Amount</th>\n            <th>Category</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {incomes.map(income => (\n            <tr key={income.IncomeID}>\n              <td>{format(new Date(income.Date), 'dd-MM-yyyy')}</td>\n              <td>{income.Description}</td>\n              <td>₪{income.Amount}</td>\n              <td>{income.CategoryName}</td>\n              <td>\n                <button onClick={() => startEditing(income)}>Update</button>\n                <button onClick={() => deleteIncome(income.IncomeID)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td colSpan={2}><strong>Total</strong></td>\n            <td><strong>₪{totalIncomes}</strong></td>\n            <td colSpan={2}></td>\n          </tr>\n        </tbody>\n      </table>\n      {showForm && (\n        <form onSubmit={handleSubmit}>\n          <h3>{editingIncome ? 'Update Income' : 'Create Income'}</h3>\n          {error && <p style={{ color: 'red' }}>{error}</p>}\n          <label>\n            <strong>Description:</strong>\n            <input\n              type=\"text\"\n              name=\"Description\"\n              value={editingIncome ? editingIncome.Description : newIncome.Description}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <strong>Amount:</strong>\n            <input\n              type=\"number\"\n              name=\"Amount\"\n              value={editingIncome ? editingIncome.Amount : newIncome.Amount}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <strong>Date:</strong>\n            <input\n              type=\"date\"\n              name=\"Date\"\n              value={editingIncome ? editingIncome.Date : newIncome.Date}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <strong>Category:</strong>\n            <CategorySelector \n              categories={[...incomeCategories.map(category => category.toLowerCase()), 'Other']} \n              onSelect={handleCategorySelect} \n            />\n          </label>\n          {showAddCategory && (\n            <div>\n              <label>\n                <strong>Add New Category:</strong>\n                <input\n                  type=\"text\"\n                  value={newCategory}\n                  onChange={(e) => setNewCategory(e.target.value)}\n                />\n                <button type=\"button\" onClick={handleAddCategory}>Add Category</button>\n              </label>\n            </div>\n          )}\n          <button type=\"submit\">{editingIncome ? 'Update' : 'Create'}</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Incomes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}