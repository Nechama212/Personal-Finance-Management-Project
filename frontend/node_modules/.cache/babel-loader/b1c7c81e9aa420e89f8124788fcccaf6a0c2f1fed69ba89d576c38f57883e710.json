{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/context/UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Define the shape of the context data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create the context with a default value\nconst UserContext = /*#__PURE__*/createContext(undefined);\n\n// Context provider component\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n\n  // Log whenever the email changes\n  useEffect(() => {\n    console.log('User email updated:', email);\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      email,\n      setEmail\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the UserContext\n_s(UserProvider, \"eu7YJhgJlsSX6/YyGizBJ2wfHdI=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","undefined","UserProvider","children","_s","email","setEmail","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/context/UserContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, FC, useEffect } from 'react';\n\n// Define the shape of the context data\ninterface UserContextType {\n  email: string;\n  setEmail: (email: string) => void;\n}\n\n// Create the context with a default value\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\n// Context provider component\nexport const UserProvider: FC<{ children: ReactNode }> = ({ children }) => {\n  const [email, setEmail] = useState<string>('');\n\n  // Log whenever the email changes\n  useEffect(() => {\n    console.log('User email updated:', email);\n  }, [email]);\n\n  return (\n    <UserContext.Provider value={{ email, setEmail }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// Custom hook to use the UserContext\nexport const useUser = (): UserContextType => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAiBC,SAAS,QAAQ,OAAO;;AAE5F;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;;AAEzE;AACA,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,KAAK,CAAC;EAC3C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEN,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC9CA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAV,EAAA,CAfaF,YAAyC;AAAAa,EAAA,GAAzCb,YAAyC;AAgBtD,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAGvB,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACkB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}