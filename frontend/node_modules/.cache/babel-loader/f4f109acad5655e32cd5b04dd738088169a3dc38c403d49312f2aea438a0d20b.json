{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/MonthlyBudget/MonthlyBudget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CategorySelector from './CategorySelector';\nimport BudgetInput from './BudgetInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyBudget = ({\n  userEmail\n}) => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [alertMessage, setAlertMessage] = useState('');\n  useEffect(() => {\n    // Fetch categories from the backend\n    fetch(`/api/categories?email=${userEmail}`).then(response => response.json()).then(data => setCategories(data)).catch(error => console.error('Error fetching categories:', error));\n  }, [userEmail]);\n  useEffect(() => {\n    // Fetch spent amounts and check for alerts\n    if (selectedCategory) {\n      fetch(`/api/budgets?email=${userEmail}&category=${selectedCategory}`).then(response => response.json()).then(data => {\n        const {\n          spentAmount,\n          budgetAmount\n        } = data;\n        if (spentAmount >= budgetAmount) {\n          setAlertMessage(`Warning: You have exceeded your budget for ${selectedCategory}!`);\n        } else {\n          setAlertMessage('');\n        }\n      }).catch(error => console.error('Error fetching budget data:', error));\n    }\n  }, [selectedCategory, userEmail]);\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n  };\n  const handleBudgetSave = amount => {\n    // Save budget to the backend\n    const data = {\n      email: userEmail,\n      categoryName: selectedCategory,\n      budgetAmount: parseFloat(amount),\n      spentAmount: 0,\n      // Initial value\n      budgetMonth: new Date()\n    };\n    fetch('/api/budgets', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      alert('Budget saved successfully!');\n    }).catch(error => console.error('Error saving budget:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), alertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert\",\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CategorySelector, {\n      categories: categories,\n      onSelect: handleCategorySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(BudgetInput, {\n      onSave: handleBudgetSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyBudget, \"iUnaFQDb5KiSNLndpmDkr0zxT4M=\");\n_c = MonthlyBudget;\nexport default MonthlyBudget;\nvar _c;\n$RefreshReg$(_c, \"MonthlyBudget\");","map":{"version":3,"names":["React","useState","useEffect","CategorySelector","BudgetInput","jsxDEV","_jsxDEV","MonthlyBudget","userEmail","_s","categories","setCategories","selectedCategory","setSelectedCategory","alertMessage","setAlertMessage","fetch","then","response","json","data","catch","error","console","spentAmount","budgetAmount","handleCategorySelect","category","handleBudgetSave","amount","email","categoryName","parseFloat","budgetMonth","Date","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSelect","onSave","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/MonthlyBudget/MonthlyBudget.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CategorySelector from './CategorySelector';\nimport BudgetInput from './BudgetInput';\n\nconst MonthlyBudget = ({ userEmail }) => {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [alertMessage, setAlertMessage] = useState('');\n\n  useEffect(() => {\n    // Fetch categories from the backend\n    fetch(`/api/categories?email=${userEmail}`)\n      .then(response => response.json())\n      .then(data => setCategories(data))\n      .catch(error => console.error('Error fetching categories:', error));\n  }, [userEmail]);\n\n  useEffect(() => {\n    // Fetch spent amounts and check for alerts\n    if (selectedCategory) {\n      fetch(`/api/budgets?email=${userEmail}&category=${selectedCategory}`)\n        .then(response => response.json())\n        .then(data => {\n          const { spentAmount, budgetAmount } = data;\n          if (spentAmount >= budgetAmount) {\n            setAlertMessage(`Warning: You have exceeded your budget for ${selectedCategory}!`);\n          } else {\n            setAlertMessage('');\n          }\n        })\n        .catch(error => console.error('Error fetching budget data:', error));\n    }\n  }, [selectedCategory, userEmail]);\n\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleBudgetSave = (amount) => {\n    // Save budget to the backend\n    const data = {\n      email: userEmail,\n      categoryName: selectedCategory,\n      budgetAmount: parseFloat(amount),\n      spentAmount: 0, // Initial value\n      budgetMonth: new Date()\n    };\n\n    fetch('/api/budgets', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(response => response.json())\n      .then(data => {\n        alert('Budget saved successfully!');\n      })\n      .catch(error => console.error('Error saving budget:', error));\n  };\n\n  return (\n    <div>\n      <h2>Monthly Budget</h2>\n      {alertMessage && <div className=\"alert\">{alertMessage}</div>}\n      <CategorySelector categories={categories} onSelect={handleCategorySelect} />\n      {selectedCategory && <BudgetInput onSave={handleBudgetSave} />}\n    </div>\n  );\n};\n\nexport default MonthlyBudget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}