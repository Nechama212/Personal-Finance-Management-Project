{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// Importing the interfaces\nimport { fetchExpenses, fetchIncomes, fetchCategories } from '../api/api'; // Correct import path\nimport Expenses from './Expenses';\nimport Incomes from './Incomes';\nimport Categories from './Categories'; // Importing the Categories component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [email, setEmail] = useState('example@example.com'); // Setting default email\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    if (email) {\n      const fetchData = async () => {\n        try {\n          const [expensesData, incomesData, categoriesData] = await Promise.all([fetchExpenses(email), fetchIncomes(email), fetchCategories(email)]);\n          // Ensure data are arrays\n          setExpenses(Array.isArray(expensesData) ? expensesData : []);\n          setIncomes(Array.isArray(incomesData) ? incomesData : []);\n          setCategories(Array.isArray(categoriesData) ? categoriesData : []);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n      fetchData();\n    }\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      categories: categories,\n      setCategories: setCategories // Passing the setCategories function to update the state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      expenses: expenses,\n      setExpenses: setExpenses // Passing the setExpenses function to update the state\n      ,\n      categories: categories // Passing categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Incomes, {\n      incomes: incomes,\n      setIncomes: setIncomes // Passing the setIncomes function to update the state\n      ,\n      categories: categories // Passing categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"WNiPqiWwyRUDMWTXmlNLfy2wwPA=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useEffect","fetchExpenses","fetchIncomes","fetchCategories","Expenses","Incomes","Categories","jsxDEV","_jsxDEV","Transactions","_s","email","setEmail","expenses","setExpenses","incomes","setIncomes","categories","setCategories","fetchData","expensesData","incomesData","categoriesData","Promise","all","Array","isArray","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Expense, Income, Category } from '../types'; // Importing the interfaces\nimport { fetchExpenses, fetchIncomes, fetchCategories } from '../api/api'; // Correct import path\nimport Expenses from './Expenses';\nimport Incomes from './Incomes';\nimport Categories from './Categories'; // Importing the Categories component\n\nconst Transactions: React.FC = () => {\n  const [email, setEmail] = useState('example@example.com'); // Setting default email\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [incomes, setIncomes] = useState<Income[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n\n  useEffect(() => {\n    if (email) {\n      const fetchData = async () => {\n        try {\n          const [expensesData, incomesData, categoriesData] = await Promise.all([\n            fetchExpenses(email),\n            fetchIncomes(email),\n            fetchCategories(email),\n          ]);\n          // Ensure data are arrays\n          setExpenses(Array.isArray(expensesData) ? expensesData : []);\n          setIncomes(Array.isArray(incomesData) ? incomesData : []);\n          setCategories(Array.isArray(categoriesData) ? categoriesData : []);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n      fetchData();\n    }\n  }, [email]);\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Enter your email\"\n      />\n      <Categories\n        categories={categories}\n        setCategories={setCategories} // Passing the setCategories function to update the state\n      />\n      <Expenses\n        expenses={expenses}\n        setExpenses={setExpenses} // Passing the setExpenses function to update the state\n        categories={categories} // Passing categories\n      />\n      <Incomes\n        incomes={incomes}\n        setIncomes={setIncomes} // Passing the setIncomes function to update the state\n        categories={categories} // Passing categories\n      />\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}