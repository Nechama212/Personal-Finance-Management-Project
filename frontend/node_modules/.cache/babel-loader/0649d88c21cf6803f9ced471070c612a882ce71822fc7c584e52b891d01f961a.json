{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/Analytics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ExpensesSummary from './ExpensesSummary';\nimport IncomesSummary from './IncomesSummary';\nimport ExpensesByCategoryChart from './ExpensesByCategoryChart';\nimport ExpensesByMonthChart from './ExpensesByMonthChart';\nimport AnalyticsMetrics from './AnalyticsMetrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [analytics, setAnalytics] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  const handleEmailChange = event => {\n    setUserEmail(event.target.value);\n  };\n  useEffect(() => {\n    if (userEmail) {\n      fetch(`/api/expenses/${userEmail}`).then(response => response.json()).then(data => {\n        console.log(\"Expenses data:\", data);\n        setExpenses(data);\n      }).catch(error => console.error('Error fetching expenses:', error));\n      fetch(`/api/incomes/${userEmail}`).then(response => response.json()).then(data => {\n        console.log(\"Incomes data:\", data);\n        setIncomes(data);\n      }).catch(error => console.error('Error fetching incomes:', error));\n      fetch(`/api/analytics/${userEmail}`).then(response => response.json()).then(data => {\n        console.log(\"Analytics data:\", data);\n        setAnalytics(data);\n      }).catch(error => console.error('Error fetching analytics:', error));\n    }\n  }, [userEmail]);\n  const monthlyExpenses = analytics.filter(item => item.Metric === 'monthly_expenses');\n\n  // Group expenses by category for the pie chart\n  const expensesByCategory = expenses.reduce((acc, expense) => {\n    const categoryName = `Category ${expense.CategoryID}`; // תוכל לשדרג עם שם הקטגוריה או להישאר עם ה-ID\n    if (!acc[categoryName]) {\n      acc[categoryName] = 0;\n    }\n    acc[categoryName] += expense.Amount;\n    return acc;\n  }, {});\n  const expensesByCategoryArray = Object.entries(expensesByCategory).map(([CategoryName, Amount]) => ({\n    CategoryName,\n    Amount\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"emailInput\",\n      children: \"Enter your email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"emailInput\",\n      value: userEmail,\n      onChange: handleEmailChange,\n      placeholder: \"example@example.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesSummary, {\n      expenses: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncomesSummary, {\n      incomes: incomes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesByCategoryChart, {\n      expensesByCategory: expensesByCategoryArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesByMonthChart, {\n      monthlyExpenses: monthlyExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnalyticsMetrics, {\n      analytics: analytics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"YXkzqMwtipvHqGa3IlvCYvh6m6Q=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useState","ExpensesSummary","IncomesSummary","ExpensesByCategoryChart","ExpensesByMonthChart","AnalyticsMetrics","jsxDEV","_jsxDEV","Analytics","_s","expenses","setExpenses","incomes","setIncomes","analytics","setAnalytics","userEmail","setUserEmail","handleEmailChange","event","target","value","fetch","then","response","json","data","console","log","catch","error","monthlyExpenses","filter","item","Metric","expensesByCategory","reduce","acc","expense","categoryName","CategoryID","Amount","expensesByCategoryArray","Object","entries","map","CategoryName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/Analytics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ExpensesSummary from './ExpensesSummary';\nimport IncomesSummary from './IncomesSummary';\nimport ExpensesByCategoryChart from './ExpensesByCategoryChart';\nimport ExpensesByMonthChart from './ExpensesByMonthChart';\nimport AnalyticsMetrics from './AnalyticsMetrics';\n\ninterface Expense {\n  ExpenseID: number;\n  CategoryID: number;  // ID של הקטגוריה\n  Amount: number;\n  Date: Date;\n  Description?: string;\n}\n\ninterface Income {\n  IncomeID: number;\n  Amount: number;\n  Date: Date;\n  Description?: string;\n}\n\nconst Analytics: React.FC = () => {\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [incomes, setIncomes] = useState<Income[]>([]);\n  const [analytics, setAnalytics] = useState<any[]>([]);\n  const [userEmail, setUserEmail] = useState<string>('');\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserEmail(event.target.value);\n  };\n\n  useEffect(() => {\n    if (userEmail) {\n      fetch(`/api/expenses/${userEmail}`)\n        .then(response => response.json())\n        .then((data: Expense[]) => {\n          console.log(\"Expenses data:\", data);\n          setExpenses(data);\n        })\n        .catch(error => console.error('Error fetching expenses:', error));\n\n      fetch(`/api/incomes/${userEmail}`)  \n        .then(response => response.json())\n        .then((data: Income[]) => {\n          console.log(\"Incomes data:\", data);\n          setIncomes(data);\n        })\n        .catch(error => console.error('Error fetching incomes:', error));\n\n      fetch(`/api/analytics/${userEmail}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Analytics data:\", data);\n          setAnalytics(data);\n        })\n        .catch(error => console.error('Error fetching analytics:', error));\n    }\n  }, [userEmail]);\n\n  const monthlyExpenses = analytics.filter(item => item.Metric === 'monthly_expenses');\n\n  // Group expenses by category for the pie chart\n  const expensesByCategory = expenses.reduce<Record<string, number>>((acc, expense) => {\n    const categoryName = `Category ${expense.CategoryID}`; // תוכל לשדרג עם שם הקטגוריה או להישאר עם ה-ID\n    if (!acc[categoryName]) {\n      acc[categoryName] = 0;\n    }\n    acc[categoryName] += expense.Amount;\n    return acc;\n  }, {});\n\n  const expensesByCategoryArray = Object.entries(expensesByCategory).map(([CategoryName, Amount]) => ({ CategoryName, Amount }));\n\n  return (\n    <div className=\"analytics\">\n      <h1>Analytics</h1>\n      <label htmlFor=\"emailInput\">Enter your email:</label>\n      <input\n        type=\"email\"\n        id=\"emailInput\"\n        value={userEmail}\n        onChange={handleEmailChange}\n        placeholder=\"example@example.com\"\n      />\n      <ExpensesSummary expenses={expenses} />\n      <IncomesSummary incomes={incomes} />\n      <ExpensesByCategoryChart expensesByCategory={expensesByCategoryArray} />\n      <ExpensesByMonthChart monthlyExpenses={monthlyExpenses} />\n      <AnalyticsMetrics analytics={analytics} />\n    </div>\n  );\n};\n\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}