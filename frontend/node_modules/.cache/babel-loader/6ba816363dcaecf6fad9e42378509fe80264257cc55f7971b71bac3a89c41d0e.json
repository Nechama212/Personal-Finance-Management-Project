{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Expenses from './Expenses';\nimport Incomes from './Incomes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [email, setEmail] = useState(\"example@example.com\");\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [showAddCategory, setShowAddCategory] = useState(false); // Show add category form\n  const [newCategory, setNewCategory] = useState('');\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses/${email}`);\n        const data = await response.json();\n        setExpenses(data);\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      }\n    };\n    const fetchIncomes = async () => {\n      try {\n        const response = await fetch(`/api/incomes/${email}`);\n        const data = await response.json();\n        setIncomes(data);\n      } catch (error) {\n        console.error(\"Error fetching incomes:\", error);\n      }\n    };\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('/api/categories');\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n    fetchExpenses();\n    fetchIncomes();\n    fetchCategories();\n  }, [email]);\n  const addCategory = async categoryName => {\n    if (categoryName && !categories.map(c => c.name.toLowerCase()).includes(categoryName.toLowerCase())) {\n      try {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            CategoryName: categoryName,\n            Email: email\n          })\n        });\n        if (!response.ok) {\n          const errorMessage = await response.text();\n          console.error(\"Error creating category:\", errorMessage);\n          return;\n        }\n        const newCategory = await response.json();\n        setCategories([...categories, newCategory]);\n        setShowAddCategory(false);\n        setNewCategory('');\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Expenses, {\n        expenses: expenses,\n        updateExpense: expense => console.log(\"Updating Expense:\", expense),\n        deleteExpense: id => console.log(\"Deleting Expense:\", id),\n        createExpense: newExpense => console.log(\"Creating Expense:\", newExpense),\n        addCategory: addCategory,\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Incomes, {\n        incomes: incomes,\n        updateIncome: income => console.log(\"Updating Income:\", income),\n        deleteIncome: id => console.log(\"Deleting Income:\", id),\n        createIncome: newIncome => console.log(\"Creating Income:\", newIncome),\n        addCategory: addCategory,\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), showAddCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter new category\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addCategory(newCategory),\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"XGlHaDw++TVxoU5MbF9X7JICHNw=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useEffect","Expenses","Incomes","jsxDEV","_jsxDEV","Transactions","_s","email","setEmail","expenses","setExpenses","incomes","setIncomes","categories","setCategories","showAddCategory","setShowAddCategory","newCategory","setNewCategory","fetchExpenses","response","fetch","data","json","error","console","fetchIncomes","fetchCategories","addCategory","categoryName","map","c","name","toLowerCase","includes","method","headers","body","JSON","stringify","CategoryName","Email","ok","errorMessage","text","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","display","justifyContent","updateExpense","expense","log","deleteExpense","id","createExpense","newExpense","updateIncome","income","deleteIncome","createIncome","newIncome","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Transactions/Transactions.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Expenses from './Expenses';\nimport Incomes from './Incomes';\n\ninterface Expense {\n  ExpenseID: number;\n  Description: string;\n  Amount: number;\n  Date: string;\n  CategoryName: string;\n}\n\ninterface Income {\n  IncomeID: number;\n  Description: string;\n  Amount: number;\n  Date: string;\n  CategoryName: string;\n}\n\ninterface Category {\n  id: number;\n  name: string;\n}\n\nconst Transactions: React.FC = () => {\n  const [email, setEmail] = useState(\"example@example.com\");\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [incomes, setIncomes] = useState<Income[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [showAddCategory, setShowAddCategory] = useState(false); // Show add category form\n  const [newCategory, setNewCategory] = useState('');\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses/${email}`);\n        const data = await response.json();\n        setExpenses(data);\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      }\n    };\n\n    const fetchIncomes = async () => {\n      try {\n        const response = await fetch(`/api/incomes/${email}`);\n        const data = await response.json();\n        setIncomes(data);\n      } catch (error) {\n        console.error(\"Error fetching incomes:\", error);\n      }\n    };\n\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('/api/categories');\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    fetchExpenses();\n    fetchIncomes();\n    fetchCategories();\n  }, [email]);\n\n  const addCategory = async (categoryName: string) => {\n    if (categoryName && !categories.map(c => c.name.toLowerCase()).includes(categoryName.toLowerCase())) {\n      try {\n        const response = await fetch('/api/categories', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ CategoryName: categoryName, Email: email }),\n        });\n\n        if (!response.ok) {\n          const errorMessage = await response.text();\n          console.error(\"Error creating category:\", errorMessage);\n          return;\n        }\n\n        const newCategory = await response.json();\n        setCategories([...categories, newCategory]);\n        setShowAddCategory(false);\n        setNewCategory('');\n      } catch (error) {\n        console.error(\"Error creating category:\", error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Transactions</h1>\n      <div>\n        <label>\n          Email:\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        </label>\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        <Expenses\n          expenses={expenses}\n          updateExpense={(expense) => console.log(\"Updating Expense:\", expense)}\n          deleteExpense={(id) => console.log(\"Deleting Expense:\", id)}\n          createExpense={(newExpense) => console.log(\"Creating Expense:\", newExpense)}\n          addCategory={addCategory}\n          categories={categories} \n        />\n        <Incomes\n          incomes={incomes}\n          updateIncome={(income) => console.log(\"Updating Income:\", income)}\n          deleteIncome={(id) => console.log(\"Deleting Income:\", id)}\n          createIncome={(newIncome) => console.log(\"Creating Income:\", newIncome)}\n          addCategory={addCategory}\n          categories={categories} \n        />\n      </div>\n      {showAddCategory && (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter new category\"\n            value={newCategory}\n            onChange={(e) => setNewCategory(e.target.value)}\n          />\n          <button onClick={() => addCategory(newCategory)}>Add Category</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}