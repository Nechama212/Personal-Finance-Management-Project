{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/ExpensesByMonthChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement,\n// Added Bar Element for Bar Chart\nTitle, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement,\n// Register Bar Element for Bar Chart\nTitle, Tooltip, Legend);\nconst ExpensesByMonthChart = ({\n  monthlyExpenses\n}) => {\n  console.log(\"Monthly Expenses data:\", monthlyExpenses);\n\n  // Extract unique months and their corresponding expense amounts\n  const monthsData = monthlyExpenses.reduce((acc, expense) => {\n    const month = new Date(expense.Date).toLocaleString('en-US', {\n      month: 'long',\n      year: 'numeric'\n    });\n    if (!acc[month]) {\n      acc[month] = 0;\n    }\n    acc[month] += expense.Amount;\n    return acc;\n  }, {});\n\n  // Prepare labels and data for the Bar chart\n  const labels = Object.keys(monthsData); // Unique months\n  const data = {\n    labels: labels,\n    // Month names in English (unique months)\n    datasets: [{\n      label: 'Expenses Amount',\n      // Label for the chart\n      data: labels.map(month => monthsData[month]),\n      // Total expense amount for each unique month\n      backgroundColor: '#36A2EB',\n      // Color for the bars\n      borderColor: '#36A2EB',\n      // Border color for the bars\n      borderWidth: 1 // Border width for the bars\n    }]\n  };\n  console.log(\"Chart data:\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses-by-month-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenses by Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpensesByMonthChart;\nexport default ExpensesByMonthChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesByMonthChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","ExpensesByMonthChart","monthlyExpenses","console","log","monthsData","reduce","acc","expense","month","Date","toLocaleString","year","Amount","labels","Object","keys","data","datasets","label","map","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/ExpensesByMonthChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,  // Added Bar Element for Bar Chart\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,  // Register Bar Element for Bar Chart\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ExpensesByMonthChart: React.FC<{ monthlyExpenses: Array<any> }> = ({ monthlyExpenses }) => {\n  console.log(\"Monthly Expenses data:\", monthlyExpenses);\n\n  // Extract unique months and their corresponding expense amounts\n  const monthsData = monthlyExpenses.reduce((acc: any, expense) => {\n    const month = new Date(expense.Date).toLocaleString('en-US', { month: 'long', year: 'numeric' });\n    if (!acc[month]) {\n      acc[month] = 0;\n    }\n    acc[month] += expense.Amount;\n    return acc;\n  }, {});\n\n  // Prepare labels and data for the Bar chart\n  const labels = Object.keys(monthsData);  // Unique months\n  const data = {\n    labels: labels,  // Month names in English (unique months)\n    datasets: [{\n      label: 'Expenses Amount',  // Label for the chart\n      data: labels.map(month => monthsData[month]),  // Total expense amount for each unique month\n      backgroundColor: '#36A2EB',  // Color for the bars\n      borderColor: '#36A2EB',  // Border color for the bars\n      borderWidth: 1,  // Border width for the bars\n    }],\n  };\n\n  console.log(\"Chart data:\", data);\n\n  return (\n    <div className=\"expenses-by-month-chart\">\n      <h2>Expenses by Month</h2>\n      <Bar data={data} /> {/* Render Bar Chart */}\n    </div>\n  );\n};\n\nexport default ExpensesByMonthChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU;AAAG;AACbC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,UAAU;AAAG;AACbC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,oBAA+D,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC/FC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,eAAe,CAAC;;EAEtD;EACA,MAAMG,UAAU,GAAGH,eAAe,CAACI,MAAM,CAAC,CAACC,GAAQ,EAAEC,OAAO,KAAK;IAC/D,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACF,OAAO,CAACE,IAAI,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAAEF,KAAK,EAAE,MAAM;MAAEG,IAAI,EAAE;IAAU,CAAC,CAAC;IAChG,IAAI,CAACL,GAAG,CAACE,KAAK,CAAC,EAAE;MACfF,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;IAChB;IACAF,GAAG,CAACE,KAAK,CAAC,IAAID,OAAO,CAACK,MAAM;IAC5B,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMO,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACX,UAAU,CAAC,CAAC,CAAE;EACzC,MAAMY,IAAI,GAAG;IACXH,MAAM,EAAEA,MAAM;IAAG;IACjBI,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,iBAAiB;MAAG;MAC3BF,IAAI,EAAEH,MAAM,CAACM,GAAG,CAACX,KAAK,IAAIJ,UAAU,CAACI,KAAK,CAAC,CAAC;MAAG;MAC/CY,eAAe,EAAE,SAAS;MAAG;MAC7BC,WAAW,EAAE,SAAS;MAAG;MACzBC,WAAW,EAAE,CAAC,CAAG;IACnB,CAAC;EACH,CAAC;EAEDpB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEa,IAAI,CAAC;EAEhC,oBACElB,OAAA;IAAKyB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtC1B,OAAA;MAAA0B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B9B,OAAA,CAACF,GAAG;MAACoB,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACC,EAAA,GAlCI7B,oBAA+D;AAoCrE,eAAeA,oBAAoB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}