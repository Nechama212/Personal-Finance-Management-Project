{"ast":null,"code":"var _jsxFileName = \"/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/Analytics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Analytics.css';\nimport ExpensesByCategoryChart from './ExpensesByCategoryChart';\nimport ExpensesByMonthChart from './ExpensesByMonthChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n\n  // Fetch data when userEmail changes\n  useEffect(() => {\n    if (userEmail) {\n      // Fetch expenses\n      fetch(`/api/expenses/${userEmail}`).then(response => response.json()).then(data => setExpenses(data)).catch(error => console.error('Error fetching expenses:', error));\n\n      // Fetch incomes\n      fetch(`/api/incomes/${userEmail}`).then(response => response.json()).then(data => setIncomes(data)).catch(error => console.error('Error fetching incomes:', error));\n    }\n  }, [userEmail]);\n\n  // Calculate total expenses and incomes\n  const totalExpenses = expenses.reduce((acc, expense) => acc + expense.Amount, 0);\n  const totalIncomes = incomes.reduce((acc, income) => acc + income.Amount, 0);\n\n  // Calculate savings or deficit (minus if expenses > incomes)\n  const savings = totalIncomes - totalExpenses;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"emailInput\",\n      children: \"Enter your email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"emailInput\",\n      value: userEmail,\n      onChange: e => setUserEmail(e.target.value),\n      placeholder: \"example@example.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expense and Income Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Expenses: \", totalExpenses.toFixed(2), \"\\u20AA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Incomes: \", totalIncomes.toFixed(2), \"\\u20AA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Saving/Deficit: \", savings >= 0 ? `${savings.toFixed(2)}₪` : `${Math.abs(savings).toFixed(2)}₪ deficit`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ExpensesByCategoryChart, {\n          expensesByCategory: expenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ExpensesByMonthChart, {\n          monthlyExpenses: expenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"wzOGR216M/9TtD+sOmBoeQ64/sk=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useState","ExpensesByCategoryChart","ExpensesByMonthChart","jsxDEV","_jsxDEV","Analytics","_s","expenses","setExpenses","incomes","setIncomes","userEmail","setUserEmail","fetch","then","response","json","data","catch","error","console","totalExpenses","reduce","acc","expense","Amount","totalIncomes","income","savings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","placeholder","toFixed","Math","abs","expensesByCategory","monthlyExpenses","_c","$RefreshReg$"],"sources":["/Users/nechama/Downloads/personal_finance_managment/frontend/src/components/Analytics/Analytics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Analytics.css';\nimport ExpensesByCategoryChart from './ExpensesByCategoryChart';\nimport ExpensesByMonthChart from './ExpensesByMonthChart';\n\ninterface Expense {\n  ExpenseID: number;\n  CategoryID: number;\n  CategoryName: string;\n  Amount: number;\n  Date: Date;\n  Description?: string;\n}\n\ninterface Income {\n  IncomeID: number;\n  Amount: number;\n  Date: Date;\n  Description?: string;\n}\n\nconst Analytics: React.FC = () => {\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [incomes, setIncomes] = useState<Income[]>([]);\n  const [userEmail, setUserEmail] = useState<string>('');\n\n  // Fetch data when userEmail changes\n  useEffect(() => {\n    if (userEmail) {\n      // Fetch expenses\n      fetch(`/api/expenses/${userEmail}`)\n        .then(response => response.json())\n        .then((data: Expense[]) => setExpenses(data))\n        .catch(error => console.error('Error fetching expenses:', error));\n\n      // Fetch incomes\n      fetch(`/api/incomes/${userEmail}`)\n        .then(response => response.json())\n        .then((data: Income[]) => setIncomes(data))\n        .catch(error => console.error('Error fetching incomes:', error));\n    }\n  }, [userEmail]);\n\n  // Calculate total expenses and incomes\n  const totalExpenses = expenses.reduce((acc, expense) => acc + expense.Amount, 0);\n  const totalIncomes = incomes.reduce((acc, income) => acc + income.Amount, 0);\n\n  // Calculate savings or deficit (minus if expenses > incomes)\n  const savings = totalIncomes - totalExpenses;\n\n  return (\n    <div className=\"analytics-container\">\n      <h1>Analytics</h1>\n      <label htmlFor=\"emailInput\">Enter your email:</label>\n      <input\n        type=\"email\"\n        id=\"emailInput\"\n        value={userEmail}\n        onChange={(e) => setUserEmail(e.target.value)}\n        placeholder=\"example@example.com\"\n      />\n\n      {/* Expense and Income Summary */}\n      <div className=\"summary-container\">\n        <h2>Expense and Income Summary</h2>\n        <div className=\"summary-box\">\n          <p>Total Expenses: {totalExpenses.toFixed(2)}₪</p>\n          <p>Total Incomes: {totalIncomes.toFixed(2)}₪</p>\n          <p>Saving/Deficit: {savings >= 0 ? `${savings.toFixed(2)}₪` : `${Math.abs(savings).toFixed(2)}₪ deficit`}</p>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"charts-container\">\n        <div className=\"chart\">\n          <ExpensesByCategoryChart expensesByCategory={expenses} />\n        </div>\n        <div className=\"chart\">\n          <ExpensesByMonthChart monthlyExpenses={expenses} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}